[{"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"1","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"2","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"3","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"4","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"5","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx":"6","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx":"7","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx":"8","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"9","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"10","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"11","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx":"12","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx":"13","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"14","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"15","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"16","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"17","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx":"18","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"19","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"20","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx":"21","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx":"22","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"23","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx":"24","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\PopUpWindow\\PopUpForm.tsx":"25","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"26","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"27","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"28","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts":"29","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"30","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"31","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"32","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx":"33","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"34","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"35","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx":"36","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx":"37","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"38","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"39","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"40","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx":"41","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx":"42","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"43","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"44","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"45","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"46","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx":"47","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"48","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"49","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"50","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx":"51","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx":"52","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx":"53","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\PopUpWindow\\PopUpForm.tsx":"54","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"55","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"56","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"57","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts":"58"},{"size":664,"mtime":1610929409902,"results":"59","hashOfConfig":"60"},{"size":425,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":1621,"mtime":1610931059131,"results":"62","hashOfConfig":"60"},{"size":343,"mtime":1610929409826,"results":"63","hashOfConfig":"60"},{"size":4763,"mtime":1610930681704,"results":"64","hashOfConfig":"60"},{"size":402,"mtime":1610929409864,"results":"65","hashOfConfig":"60"},{"size":765,"mtime":1610929409825,"results":"66","hashOfConfig":"60"},{"size":6248,"mtime":1610930472361,"results":"67","hashOfConfig":"60"},{"size":5027,"mtime":1610930405403,"results":"68","hashOfConfig":"60"},{"size":402,"mtime":1610929409608,"results":"69","hashOfConfig":"60"},{"size":448,"mtime":1610929409703,"results":"70","hashOfConfig":"60"},{"size":3601,"mtime":1610930501482,"results":"71","hashOfConfig":"60"},{"size":937,"mtime":1610929409653,"results":"72","hashOfConfig":"60"},{"size":2847,"mtime":1610929409700,"results":"73","hashOfConfig":"60"},{"size":827,"mtime":1610929409691,"results":"74","hashOfConfig":"60"},{"size":1971,"mtime":1610929409873,"results":"75","hashOfConfig":"60"},{"size":3893,"mtime":1610929409824,"results":"76","hashOfConfig":"60"},{"size":1822,"mtime":1610930484685,"results":"77","hashOfConfig":"60"},{"size":6323,"mtime":1610929409607,"results":"78","hashOfConfig":"60"},{"size":6503,"mtime":1610930613858,"results":"79","hashOfConfig":"60"},{"size":2221,"mtime":1610929409844,"results":"80","hashOfConfig":"60"},{"size":1228,"mtime":1610929409609,"results":"81","hashOfConfig":"60"},{"size":4523,"mtime":1610929409941,"results":"82","hashOfConfig":"60"},{"size":3746,"mtime":1610930545814,"results":"83","hashOfConfig":"60"},{"size":1730,"mtime":1610929409756,"results":"84","hashOfConfig":"60"},{"size":1334,"mtime":1610929409654,"results":"85","hashOfConfig":"60"},{"size":8209,"mtime":1610930617180,"results":"86","hashOfConfig":"60"},{"size":273,"mtime":1610929409655,"results":"87","hashOfConfig":"60"},{"size":242,"mtime":1610930801763,"results":"88","hashOfConfig":"60"},{"size":664,"mtime":1610938182936,"results":"89","hashOfConfig":"90"},{"size":440,"mtime":1610938182940,"results":"91","hashOfConfig":"90"},{"size":1621,"mtime":1610938182920,"results":"92","hashOfConfig":"90"},{"size":765,"mtime":1610938182934,"results":"93","hashOfConfig":"90"},{"size":343,"mtime":1610938182934,"results":"94","hashOfConfig":"90"},{"size":402,"mtime":1610938182925,"results":"95","hashOfConfig":"90"},{"size":6248,"mtime":1610938182923,"results":"96","hashOfConfig":"90"},{"size":402,"mtime":1610938182935,"results":"97","hashOfConfig":"90"},{"size":448,"mtime":1610938182929,"results":"98","hashOfConfig":"90"},{"size":5027,"mtime":1610938182921,"results":"99","hashOfConfig":"90"},{"size":4763,"mtime":1610938182933,"results":"100","hashOfConfig":"90"},{"size":3601,"mtime":1610938182924,"results":"101","hashOfConfig":"90"},{"size":937,"mtime":1610938182926,"results":"102","hashOfConfig":"90"},{"size":2847,"mtime":1610938182929,"results":"103","hashOfConfig":"90"},{"size":3893,"mtime":1610938182933,"results":"104","hashOfConfig":"90"},{"size":827,"mtime":1610938182929,"results":"105","hashOfConfig":"90"},{"size":6377,"mtime":1610938752361,"results":"106","hashOfConfig":"90"},{"size":1822,"mtime":1610938182923,"results":"107","hashOfConfig":"90"},{"size":6503,"mtime":1610938182928,"results":"108","hashOfConfig":"90"},{"size":1973,"mtime":1610938915287,"results":"109","hashOfConfig":"90"},{"size":4523,"mtime":1610938182940,"results":"110","hashOfConfig":"90"},{"size":1228,"mtime":1610938182925,"results":"111","hashOfConfig":"90"},{"size":2221,"mtime":1610938182935,"results":"112","hashOfConfig":"90"},{"size":3746,"mtime":1610938182926,"results":"113","hashOfConfig":"90"},{"size":1730,"mtime":1610938182932,"results":"114","hashOfConfig":"90"},{"size":1334,"mtime":1610938182927,"results":"115","hashOfConfig":"90"},{"size":8209,"mtime":1610938182930,"results":"116","hashOfConfig":"90"},{"size":273,"mtime":1610938182928,"results":"117","hashOfConfig":"90"},{"size":243,"mtime":1610938182939,"results":"118","hashOfConfig":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"6qyo62",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"121"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"121"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"121"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"121"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"121"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"121"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"121"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"121"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"121"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"121"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"121"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"121"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"1ppu8vm",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"194"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],["254","255"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",["256"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx",["257"],"import { Button, TextField } from \"@material-ui/core\";\r\nimport { ColDef, DataGrid } from \"@material-ui/data-grid\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport MainFooter from \"../../MainPageComponents/MainFooter\";\r\nimport MainHeader from \"../../MainPageComponents/MainHeader\";\r\nimport { AddIngredient } from \"./AddIngredient\";\r\n\r\n\r\n\r\nconst styles = {\r\n    formStyle:{\r\n        // boxSizing: \"border-box\",\r\n        marginTop: \"5rem\",\r\n        marginBottom: \"5rem\",\r\n        padding: \"1rem 3rem\",\r\n        borderRadius: \"18px\",\r\n        // background: \"#36352d\",\r\n        boxShadow:  \"20px 20px 60px #ffffff, -20px -20px 60px #161614\",\r\n    }\r\n}\r\n\r\n\r\n\r\nconst columns: ColDef[] = [\r\n    //{ field: 'id', headerName: 'ID', width: 80 },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Ingredient name',\r\n      width: 180,\r\n     },\r\n];\r\n\r\nexport const CreateDrink: React.FunctionComponent<any> = () =>{\r\n\r\n    const {register, handleSubmit} = useForm();\r\n\r\n    const [select, setSelection] = React.useState([]);\r\n    const [ingredients, setIngredients] = useState([])\r\n    const getIngredients = async ()=>{\r\n        const response = await axios.get('http://3.134.99.157:10000/ingredients').catch((err)=>{console.log(err)})\r\n    \r\n        if (response && response.data){\r\n            setIngredients(response.data)\r\n            //console.log(response.data)\r\n            ingredients.push(response.data)\r\n            console.log(ingredients)\r\n            return ingredients    \r\n        }\r\n    }     \r\n\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n    console.log(userInfo)\r\n\r\n    const submitDrink = async (data:any)=> {\r\n        console.log(data)\r\n        await axios.post('http://3.134.99.157:10000/drinks',\r\n        {\r\n            \"degree\": data.degree,\r\n            \"drinkCreator\": {\r\n                \"firstname\": userInfo.firstname,\r\n                \"id\": userInfo.id,\r\n                \"lastname\": userInfo.lastname,\r\n                \"username\": userInfo.username,\r\n                \"password\": userInfo.password,\r\n            },\r\n            \"id\": 0,\r\n            \"name\": data.name,\r\n        })\r\n        .then((response)=>{\r\n            console.log(userInfo)\r\n            console.log(\"New drink added into the Database\", response.data)\r\n            return(response.data)\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const submitRecipe = async (ingredientId, ingredientName, data:any) =>{\r\n        await axios.post('http://3.134.99.157:10000/ingredients/recipe',{\r\n        \"drink\": {\r\n            \"degree\": data.degree,\r\n            \"drinkCreator\": {\r\n                \"firstname\": userInfo.firstname,\r\n                \"id\": userInfo.id,\r\n                \"lastname\": userInfo.lastname,\r\n                \"username\": userInfo.username,\r\n                \"password\": userInfo.password,\r\n            },\r\n            \"id\": 0,\r\n            \"name\": data.name,\r\n        },\r\n        \"ingredient\": {\r\n        \"id\": ingredientId,\r\n        \"name\": ingredientName,\r\n        },\r\n        \"recipeId\": 0\r\n    })\r\n    .then((res)=>{\r\n        console.log(\"new recipe saved\", res.data)\r\n    })\r\n    .catch((e)=>{\r\n        console.log(e)\r\n    })\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        getIngredients();\r\n    }, [])\r\n\r\n    return(\r\n    <>\r\n\r\n        <MainHeader setDrink={\"\"}/>\r\n        <div className =\"container\" style={{maxWidth: \"30%\", height: \"auto\"}}>\r\n            \r\n            <form style={styles.formStyle} onSubmit = {handleSubmit(submitDrink)} >\r\n                <h2>Add a new Drink!</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                         <TextField\r\n                            autoComplete=\"name\"\r\n                            name=\"name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            id=\"name\"\r\n                            label=\"Drink Name\"\r\n                            autoFocus\r\n                            inputRef = {register}\r\n                            margin = \"normal\"\r\n                            fullWidth\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"col-6\">\r\n                        <TextField\r\n                            id=\"degree\"\r\n                            label=\"alcohol %\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            name=\"degree\"\r\n                            variant=\"outlined\"\r\n                            required        \r\n                            inputRef = {register}\r\n                            margin = \"normal\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                <div style={{ height: 400, width: \"100%\" }}>\r\n\r\n                    <h1>{select.map((val)=> val.id)}</h1>\r\n                    <DataGrid \r\n                        \r\n                        rows={ingredients} \r\n                        columns={columns} \r\n                        pageSize={5}  \r\n                        checkboxSelection \r\n                        onSelectionChange = {(newSelection)=>{\r\n                            setSelection(newSelection.rowIds)\r\n                            let ingId = newSelection.rowIds\r\n                            //let ingName = setSelection(newSelection.rowIds)\r\n                            console.log(ingId)\r\n                            submitRecipe(ingId, ingId, {register})\r\n                            console.log((newSelection.rowIds))\r\n                            //newSelection.rowIds = {register}\r\n                            return(setSelection(newSelection.rowIds))\r\n                            } \r\n                        }\r\n                    />\r\n                    \r\n            \r\n                </div>\r\n                \r\n\r\n                <Button style={{marginTop:\"2rem\", backgroundColor:\"#ff914d\"}}  type=\"submit\" variant=\"contained\" >Create Drink</Button>\r\n            \r\n\r\n            </form>\r\n            <AddIngredient/>\r\n        </div>\r\n\r\n        <MainFooter/>\r\n        \r\n    </>\r\n    )\r\n}\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",["258","259","260"],"import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const AddReviewForm: React.FunctionComponent<any> = () =>{\r\n\r\n  const classes = useStyles();\r\n\r\n  const {register, handleSubmit, errors} = useForm();\r\n\r\n  const submitAddReview = async (data:any) => {\r\n\r\n\r\n    console.log(data)\r\n    var userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n    var drinkName = JSON.parse(sessionStorage.getItem(\"drinkName\"));\r\n    var drinkDegree = JSON.parse(sessionStorage.getItem(\"drinkDegree\"));\r\n    var drinkCreatorFirstName = JSON.parse(sessionStorage.getItem(\"drinkCreatorFirstName\"));\r\n    var drinkCreatorLastName = JSON.parse(sessionStorage.getItem(\"drinkCreatorLastName\"));\r\n    var drinkCreatorId = JSON.parse(sessionStorage.getItem(\"drinkCreatorId\"));\r\n    var drinkCreatorUsername = JSON.parse(sessionStorage.getItem(\"drinkCreatorUsername\"));\r\n    var drinkCreatorPassword = JSON.parse(sessionStorage.getItem(\"drinkCreatorPassword\"));\r\n    var drinkId = JSON.parse(sessionStorage.getItem(\"drinkId\"));\r\n\r\n    if(data.rate <0 || data.rate >5 ) {\r\n      console.log(\"you are not a valid input. go away!\")\r\n      alert(\"Please input rating between 1 and 5\")\r\n    }\r\n    if(userInfo === undefined ||  userInfo === null ) {\r\n      console.log(\"you are not logged in, go login or register.\")\r\n      alert(\"you are not logged in, go login or register.\")\r\n    }\r\n\r\n\r\n      (data.rate >= 0 && data.rate <= 5  && (userInfo != undefined))&& await axios.post('http://3.134.99.157:10000/review',{\r\n\r\n        \"author\": {\r\n          \"firstname\": userInfo.firstname,\r\n          \"id\": userInfo.id,\r\n          \"lastname\": userInfo.lastname,\r\n          \"password\": userInfo.password,\r\n          \"username\": userInfo.username,\r\n        },\r\n        \"description\": data.description,\r\n        \"drink\": {\r\n          \"degree\": drinkDegree,\r\n          \"drinkCreator\": {\r\n            \"firstname\": drinkCreatorFirstName,\r\n            \"id\": drinkCreatorId,\r\n            \"lastname\":drinkCreatorLastName,\r\n            \"password\": drinkCreatorPassword,\r\n            \"username\": drinkCreatorUsername\r\n          },\r\n          \"id\": drinkId,\r\n          \"name\": drinkName.name\r\n        },\r\n        \"id\": 0,\r\n        \"rate\": data.rate\r\n\r\n      })\r\n          .then((response)=>{\r\n            \r\n            alert(\"you successfully added a review.\")\r\n            console.log(\"succefully submitted your review!\", response.data)\r\n            window.location.reload(true);\r\n          })\r\n          .catch((err)=>{console.log(err)})\r\n    }\r\n\r\n\r\n  return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline/>\r\n          <div className={classes.paper}>\r\n\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n              Add Review\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit(submitAddReview)}>\r\n              <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      id=\"rate\"\r\n                      label=\"Rating\"\r\n                      name=\"rate\"\r\n                      autoComplete=\"rate\"\r\n                      inputRef={register()}\r\n                      fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      type=\"description\"\r\n                      id=\"description\"\r\n                      autoComplete=\"description\"\r\n                      inputRef={register}\r\n                      fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{backgroundColor:\"#ff914d\"}}\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n            </form>\r\n          </div>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx",["261","262","263"],"import React, { useEffect, useState } from \"react\"\r\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nconst columns: ColDef[] = [\r\n    //{ field: 'id', headerName: 'ID', width: 80 },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Ingredient name',\r\n      width: 180,\r\n     },\r\n];\r\n\r\n export const SelectIngredient:React.FunctionComponent<any>  = () =>{\r\n    /*\r\n    const {register, handleSubmit}= useForm();\r\n\r\n    let drinkName = JSON.parse(sessionStorage.getItem(\"drinkName\"));\r\n    let drinkDegree = JSON.parse(sessionStorage.getItem(\"drinkDegree\"));\r\n    let drinkCreatorFirstName = JSON.parse(sessionStorage.getItem(\"drinkCreatorFirstName\"));\r\n    let drinkCreatorLastName = JSON.parse(sessionStorage.getItem(\"drinkCreatorLastName\"));\r\n    let drinkCreatorId = JSON.parse(sessionStorage.getItem(\"drinkCreatorId\"));\r\n    let drinkCreatorUsername = JSON.parse(sessionStorage.getItem(\"drinkCreatorUsername\"));\r\n    let drinkCreatorPassword = JSON.parse(sessionStorage.getItem(\"drinkCreatorPassword\"));\r\n    let drinkId = JSON.parse(sessionStorage.getItem(\"drinkId\"));\r\n    let ingredientId = JSON.parse(sessionStorage.getItem(\"ingredientId\"))\r\n    let ingredientName = JSON.parse(sessionStorage.getItem(\"ingredientName\"))\r\n   \r\n\r\n    const submitRecipe = async (data:any)=> {\r\n        console.log(data)\r\n        await axios.post('http://localhost:8080/ingredients/recipe',{\r\n        \"drink\": {\r\n            \"degree\": drinkDegree,\r\n            \"drinkCreator\": {\r\n                \"firstname\": drinkCreatorFirstName,\r\n                \"id\": drinkCreatorId,\r\n                \"lastname\":drinkCreatorLastName,\r\n                \"password\": drinkCreatorPassword,\r\n                \"username\": drinkCreatorUsername\r\n            },\r\n            \"id\": drinkId,\r\n            \"name\": drinkName.name\r\n        },\r\n        \"ingredient\": {\r\n        \"id\": ingredientId,\r\n        \"name\": ingredientName,\r\n        },\r\n        \"recipeId\": 0\r\n    })\r\n    .then((res)=>{\r\n        console.log(\"new recuipe saved\", res.data)\r\n    })\r\n    .catch((e)=>{\r\n        console.log(e)\r\n    })\r\n    }\r\n    */\r\n     \r\n    const [select, setSelection] = React.useState([]);\r\n    const [ingredients, setIngredients] = useState([])\r\n    const getIngredients = async ()=>{\r\n        const response = await axios.get('http://3.134.99.157:10000/ingredients').catch((err)=>{console.log(err)})\r\n    \r\n        if (response && response.data){\r\n            setIngredients(response.data)\r\n            //console.log(response.data)\r\n            ingredients.push(response.data)\r\n            console.log(ingredients)\r\n            return ingredients    \r\n        }\r\n    }     \r\n /*   \r\n    const addRecipe = async ()=>{\r\n\r\n    }\r\n*/\r\n    useEffect(()=>{\r\n        getIngredients();\r\n    }, []) // if there is an empty bracket it only runs this once on mounting\r\n \r\n    return(\r\n    <> \r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n            <h1>{select.map((val)=> val.id)}</h1>\r\n            <DataGrid  \r\n            rows={ingredients} \r\n            columns={columns} \r\n            pageSize={5}  \r\n            checkboxSelection \r\n            onSelectionChange = {(newSelection)=>{\r\n                setSelection(newSelection.rowIds)\r\n                console.log((newSelection.rowIds))\r\n                //newSelection.rowIds = {register}\r\n                return(setSelection(newSelection.rowIds))\r\n                } \r\n            }\r\n            />\r\n            \r\n        </div>\r\n      \r\n    </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx",[],["264","265"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["266","267","268","269","270","271","272"],"import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport MainFooter from './MainFooter'\r\nimport MainBody from './MainBody'\r\nimport logo2 from './images/logo2.png'\r\n\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n  const MainHeader = ({setDrink})=>{\r\n\r\n  const [drinkName, setDrinkName] = useState('')\r\n  \r\n  const searchDrink = async (event:any)=>{\r\n    event.preventDefault()\r\n    //console.log(\"event.drinkname: \" + drinkName)\r\n    setDrink(drinkName)\r\n  }\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    let isHome = false;\r\n    if(window.location.href.substring(22,) == 'home') isHome = true; \r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"/home\"><img style={logoStyle} src={logo2} alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"#\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        {isHome ? \r\n          <form onSubmit={searchDrink} className=\"form-inline my-2 my-lg-0\">\r\n          <input id=\"drinkname\"  className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" onChange={event => setDrinkName(event.target.value)} />\r\n          <button style={{border:\"#ff914d solid 2px\"}} className=\"btn btn-outline- my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form>\r\n          :  ''\r\n         }\r\n        \r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\nexport default MainHeader\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["273","274"],"import React, { Component } from 'react';\r\nimport Wave from 'react-wavify'\r\n\r\nconst footer=  {\r\n        position:\"sticky\" as \"sticky\",\r\n        bottom: \"0\",\r\n        height:\"5vh\",\r\n        width: \"100%\",\r\n        // borderTop: \"1px double #ff914d\"\r\n    }\r\n\r\n    const items = [\"1\", ]\r\n\r\nconst MainFooter = ()=>{\r\n\r\n    return(\r\n\r\n        <footer className=\"bg-light text-dark text-center text-lg-start\" style={footer}>\r\n             <a className=\"text-dark badge\" href={\"/\"} style={{fontSize:\"20px\"}}> Mixology.com&#169;</a>\r\n            <Wave fill='#ff914d'\r\n            paused={false}\r\n            options={{\r\n            height: 1,\r\n            amplitude: 50,\r\n            speed: 0.10,\r\n            points: 3,\r\n            }}\r\n            />\r\n        </footer>\r\n\r\n       \r\n\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default MainFooter","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["275","276","277"],"import React from 'react';\r\nimport { drinkInfoByName } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { drinkInfo } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { Ingredients } from './Ingredients'\r\nimport { Review } from '../review/Review'\r\nimport { Button} from '@material-ui/core'\r\nimport { FavouriteForm } from '../Favourite/Favourite';\r\nimport { PopUpForm } from '../PopUpWindow/PopUpForm';\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst imageStyle = {\r\n    width: \"12rem\",\r\n    height: \"12rem\",\r\n    display: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    // transform: \"Translate(-50%, -50%)\",\r\n\r\n    borderRadius : \"50%\"\r\n\r\n}\r\n\r\nconst bodyStyle = {\r\n    minHeight: '87vh',\r\n    backgroundColor: \"whitesmoke\",\r\n    overflow: \"auto\"\r\n}\r\n\r\n\r\nconst contentStyle = {\r\n    width: \"100%\",\r\n    margin: \"30px 0 0 0\"\r\n}\r\n\r\nconst drinkInfoStyle = {\r\n    // width: \"100%\",\r\n    // display:\"flex\"\r\n\r\n}\r\n\r\nconst heartStyle = {\r\n    position : \"absolute\" as \"absolute\",\r\n    fontSize: \"1rem\",\r\n    color: \"lightred\",\r\n    top: \"29%\",\r\n    left: \"56%\",\r\n    zIndex: 1,\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class DrinkBody extends React.Component<any,any> {\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            drinkId: 0,\r\n            drinkName: \"\",\r\n            degree: 0,\r\n            Ingredient: [\"a\",\"b\"],\r\n            creator: \"\",\r\n            addModalShow: false\r\n\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let name = window.location.href.substring(29,)\r\n\r\n        let res = drinkInfoByName(name)\r\n        res.then((data) =>{\r\n            console.log(\"in DrinkBody, res.id: \" + data.id)\r\n            this.setState({drinkId: data.id})\r\n            this.setState({drinkName: data.name})\r\n            this.setState({degree: data.degree})\r\n            //this.setState({Ingredient})\r\n            this.setState({creator: (data.drinkCreator.firstname +\" \"+ data.drinkCreator.lastname)})\r\n            console.log(this.state.drinkName)\r\n        })\r\n\r\n        let response = await drinkInfo(name)\r\n        this.setState({drinkName: response.name})\r\n        this.setState({degree: response.degree})\r\n        this.setState({creator: (response.drinkCreator.firstname +\" \"+ response.drinkCreator.lastname)})\r\n\r\n\r\n        // setting drink info in session\r\n        let userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n        sessionStorage.setItem(\"drinkName\",  JSON.stringify(name))\r\n        sessionStorage.setItem(\"drinkdegree\",  JSON.stringify(response.degree))\r\n        sessionStorage.setItem(\"drinkCreatorFirstName\",  JSON.stringify(response.drinkCreator.firstname))\r\n        sessionStorage.setItem(\"drinkCreatorLastName\",  JSON.stringify(response.drinkCreator.lastname))\r\n        sessionStorage.setItem(\"drinkCreatorId\", JSON.stringify(response.drinkCreator.id))\r\n        sessionStorage.setItem(\"drinkCreatorUsername\", JSON.stringify(response.drinkCreator.username))\r\n        sessionStorage.setItem(\"drinkCreatorPassword\", JSON.stringify(response.drinkCreator.password))\r\n        sessionStorage.setItem(\"drinkId\", JSON.stringify(response.id))\r\n\r\n    }\r\n  \r\n   render(){\r\n    let addModalClose = ()=> this.setState({addModalShow:false});  \r\n    let imgUrl = \"../img/\"+this.state.drinkId+\".PNG\"\r\n    return(\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            \r\n             <div style={heartStyle}>\r\n             <FavouriteForm/>\r\n             </div>\r\n            \r\n            <div >\r\n                <div style={drinkInfoStyle} id=\"drinkInfoStyle\" className=\"row text-center\">\r\n\r\n                    <div className=\"col-12 pt-5\">\r\n                        \r\n                        <img style={imageStyle} className=\"card-img-top\" src={imgUrl} alt=\"Card image cap\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 text-center pb-5\" >\r\n                        <p style={contentStyle}>\r\n                            \r\n                        <strong style={{fontSize: \"2rem\"}}> {this.state.drinkName}</strong>\r\n                        <br />\r\n                        <span style={{backgroundColor: \"#ff914d\"}} className=\"badge text-dark p-2\"> Creator: {this.state.creator}</span>\r\n                        <br />\r\n                        \r\n                        {/* Degree:  {this.state.degree}% */}\r\n                        \r\n                        </p>    \r\n                        \r\n                    </div>     \r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n\r\n                <div style={{backgroundColor:\"#ffe5bd\", borderRadius:\"18px\"}} className=\"py-5\">\r\n                    <h4> Preparation </h4>\r\n                    <p>Prepare all ingredients. Mix all ingredients:</p>\r\n                    <Ingredients  key={this.state.drinkId} drinkId={this.state.drinkId} />\r\n                    <p>Add lemon on top</p>\r\n                    <p>Voila! Enjoy!</p>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"container-fluid\">\r\n            <div className=\"py-5\" >\r\n                <div className=\"AddReviewPopup\">\r\n                    <h4>Reviews</h4>\r\n               \r\n                    <ButtonToolbar>\r\n                        <Button\r\n                            style = {{\r\n                                left: \"47%\",\r\n                                translate: 'Translate(0, -50%)'\r\n                            }}\r\n                            variant = \"outlined\"\r\n                            onClick = {()=> this.setState({addModalShow: true})}\r\n                        >\r\n                            Add Review   \r\n                        </Button>\r\n                        <PopUpForm\r\n                            show = {this.state.addModalShow}\r\n                            onHide ={addModalClose}\r\n                        />\r\n                    </ButtonToolbar>\r\n                    </div>\r\n                    <div className=\"row\" >\r\n                    <Review key={this.state.drinkId} drinkId={this.state.drinkId} drinkName={this.state.drinkName} reviewList={this.state.currentReviewList} creator={this.state.creator}/>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["278"],"import React, {useState, useEffect} from 'react';\r\n// import getAllDrinks from '../../utils/asyncCalls';\r\nimport DrinkCard from './DrinksCard/DrinkCard'\r\nimport ProfileBar from './ProfileBar/ProfileBar'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport { recommendLists } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\n\r\nconst bodyStyle = {\r\n  minHeight: '90vh',\r\n  backgroundColor: \"#e9e9e9\",\r\n  overflow: \"auto\"\r\n}\r\n\r\nconst MainBody = (props)=>{\r\n    \r\n    \r\n   // console.log(\"MainBody Start\")\r\n    const [drinks, setDrinks] = useState([])\r\n    let [call, setCall] = useState(null)\r\n    let [isFirst, setFirst] = useState(true)\r\n    let [isHome, setIsHome] = useState(true)\r\n    let [drinkName, setName] = useState(props.myDrink)\r\n    const [ valueSlider, setValueSlider ] = useState(50); //Tracks the slider\r\n    const [ingredient, setIngredient] = useState(\"\")\r\n    const {register, handleSubmit} = useForm()\r\n\r\n    useEffect(() => {\r\n        console.log(\"USEEFFECT INGRIDIENT SET\", ingredient)\r\n    }, [ingredient])\r\n\r\n     useEffect(() => {document.title = \"Home\"}, [])\r\n    \r\n    \r\n\r\n    //Find a drink by name\r\n    const setTheDrink = async (dName:any)=>{\r\n        setName(dName)\r\n        setFirst(true)\r\n        //setDrinks([])\r\n        const response =  await axios.get(`http://3.134.99.157:10000/drinks/drinkName/${dName}`).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        if(response && response.data){\r\n            setDrinks([response.data])\r\n        }\r\n    }\r\n\r\n    const recommendedDrinks = async ()=>{\r\n        let list = await recommendLists()\r\n        setDrinks([list[0],list[1],list[2],list[3]])\r\n    }\r\n  \r\n    if(isFirst){\r\n        if(props.myDrink !== null && props.myDrink !== '' && props.myDrink !== undefined){\r\n            setTheDrink(props.myDrink);\r\n            setFirst(false)\r\n        }\r\n    }\r\n\r\n    if(isHome){\r\n        recommendedDrinks();\r\n        setIsHome(false);\r\n    }\r\n\r\n    if(drinkName !== props.myDrink){\r\n        setTheDrink(props.myDrink);\r\n    }\r\n    \r\n\r\n    const getCall1 = (e:Event)=>{ //DONE\r\n        e.preventDefault();\r\n        getAllDrinks();\r\n        setCall(1)\r\n    }\r\n\r\n    let getCall2 = (data:any)=>{\r\n        console.log(data, \"DATA INGRIDIENT INSIDE CALL 2\")\r\n        setCall(2)\r\n        setIngredient(data.ingredient)\r\n        getDrinksByIngredientName(data.ingredient);\r\n    }\r\n\r\n    const getCall3 = ()=>{ //WORKING\r\n        //console.log(\"call 3 being called\")\r\n        getDrinkByAlcoholContent()\r\n        setCall(3)\r\n    }\r\n\r\n    const getCall4 = (e:Event)=>{\r\n        e.preventDefault();\r\n        setCall(4)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getAllDrinks = async ()=>{\r\n        const response = await axios.get('http://3.134.99.157:10000/drinks').catch((err)=>{console.log(err)})\r\n\r\n        if((response && response.data)){\r\n            \r\n            setDrinks([])\r\n            response.data.forEach((element:any) => {\r\n                if(parseInt(element.degree) <= valueSlider){\r\n                    setDrinks(oldArray=>[...oldArray, element]);\r\n                }\r\n                \r\n            })\r\n        } \r\n        \r\n    }\r\n\r\n\r\n    const getDrinkByAlcoholContent = async ()=>{\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get('http://3.134.99.157:10000/drinks').catch((err)=>{console.log(err)})\r\n        setDrinks([])\r\n        \r\n\r\n        if((response && response.data)){\r\n            // console.log(response.data)\r\n            response.data.forEach((element:any) => {\r\n                if(parseInt(element.degree) <= valueSlider){\r\n                    setDrinks(oldArray=>[...oldArray, element]);\r\n                }\r\n                \r\n            })\r\n            \r\n        } \r\n        console.log(\"getdrinksbyalcoholcontentEND\")\r\n\r\n    }\r\n\r\n    const getValueSlider = (()=>{\r\n        // console.log(\"valueSlider has been set to \", valueSlider)\r\n        return valueSlider\r\n    })\r\n\r\n    const getDrinksByIngredientName = async (ing)=>{\r\n        console.log(ingredient, \"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\")\r\n        console.log(\"START OF  GET DRINK BY ING NAME SEARCH\")\r\n        const response = await axios.get(`http://3.134.99.157:10000/drinks/ingredientName/${ing}`).catch((err)=>{console.log(err)})\r\n        setDrinks([])\r\n\r\n            if((response && response.data)){\r\n\r\n            setDrinks(response.data)\r\n            \r\n        } \r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div className=\"row\">\r\n                <ProfileBar \r\n                getCall1={getCall1} getCall2={getCall2} getCall3={getCall3} getCall4={getCall4} \r\n                setValueSlider={setValueSlider} getValueSlider={getValueSlider} valueSlider={valueSlider}\r\n                />  \r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            {(drinks.length >= 0)  && \r\n                                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                                    <form className=\"form-inline text-center\" onSubmit={handleSubmit(getCall2)}>\r\n                                        <div className=\"form-group mx-sm-3 mb-2\">\r\n                                            <input type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            name=\"ingredient\" \r\n                                            placeholder=\"Search by Ingredient\" \r\n                                            ref={register()}\r\n                                            />\r\n                                            <button type=\"submit\" style={{border:\"#ff914d solid 2px\"}} className=\"btn btn-outline my-3\">Search</button>\r\n                                        </div> \r\n                                    </form>\r\n                                </div> \r\n                            }\r\n                        </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                {\r\n                drinks.map((element)=>{\r\n                    return(\r\n                    \r\n                    <DrinkCard key={element.id} id={element.id}  name={element.name} degree={element.degree} creator={element.drinkCreator.username}/>\r\n                    )  \r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainBody","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx",["279","280"],"import { emphasize } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { reviewList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Review extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        super(props);\r\n       //console.log(\"Review_constructor_props_drinkId: \" + props.drinkId)\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            currentReviewList: [],\r\n            listCnt: 0,\r\n            drinkName: \"\" \r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await reviewList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ currentReviewList: res });\r\n            this.setState({ drinkName: res[0].drink.name})\r\n            while(this.state.listCnt < res.length){\r\n                console.log(this.state.currentReviewList[this.state.listCnt]);\r\n            this.setState({listCnt:this.state.listCnt+1})\r\n        }\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.currentReviewList.entries()){\r\n            // returnList.push(<tr><td>{value.id}</td><td>{value.description}</td><td>{value.rate}</td><td>{value.author.username}</td></tr>)\r\n\r\n            \r\n\r\n        \r\n              returnList.push(\r\n                <>\r\n                <div className=\"col-2\"></div>\r\n                    <div className=\"col-8 my-3 alert-secondary p-3\">          \r\n                        <p className=\"text-left\">\r\n                            <strong className=\"text-dark\">Rating: {value.rate}/5</strong>\r\n                            <p className =\"text-center\">Review: {value.description}</p>\r\n                            <h6 className =\"text-center\">By: {value.author.username}</h6>\r\n                        </p>  \r\n                    </div>\r\n                <div className=\"col-2\"></div>\r\n                </>\r\n              )\r\n        }\r\n       \r\n        return (\r\n            <>{returnList}</>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx",["281","282"],"import { emphasize } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ingredientsList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Ingredients extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            ingredientsList: []\r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await ingredientsList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ ingredientsList: res });\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } else {\r\n                throw new Error(\"ERROR ON CALLING INGREDIENTS\")\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.ingredientsList.entries()){\r\n            returnList.push(value.name + \", \")\r\n        }\r\n       \r\n        return (\r\n            <div className =\"text-danger\">\r\n                 {returnList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",["283","284"],"import React from 'react';\r\nimport { mixologyClient } from \"..\"\r\n\r\n\r\nexport const login = async (username:string, password:string) => {\r\n//   let credentials = {\r\n//         username,\r\n//         password\r\n//     }  \r\n\r\n    try{\r\n\r\n        let res = await mixologyClient.post('/user/login/'+ username + '/' + password) //, credentials)\r\n       // console.log(\"aa: \" + res.data.username);\r\n        if(res.data.username === undefined) alert(\"USERNAME AND PASSWORD IS NOT VALID\")\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e);\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT LOGIN\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const reviewList = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/review/' + drinkId) \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT VIEW\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const drinkInfoByName = async (drinkName:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/drinks/drinkName/' + drinkName) \r\n        // console.log(\"drinkInfo:\" + res.data)\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND DRINK INFORMATION\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const drinkInfoById = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/drinks/find/' + drinkId) \r\n       // console.log(\"drinkInfo:\" + res.data)\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND DRINK INFORMATION\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const ingredientsList = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/ingredients/drink/' + drinkId) \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND INGREDIENTS LIST\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getIngredients = async () => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/ingredients') \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND INGREDIENTS LIST\")\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const drinkInfo = async (drinkName:any) => {\r\n\r\n    try {\r\n        let res = await mixologyClient.get('/drinks/drinkName/' + drinkName)\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (e) {\r\n        console.log(e)\r\n        if (e.response) {\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT LOGIN\")\r\n        }\r\n\r\n    }\r\n}\r\nexport const mixologyAddReview = async ( description:string, rate:number , userid:number, drinkid:number) =>{\r\n    let credentials ={\r\n        \"id\"  : 0 ,\r\n        \"userid\": `${userid}`,\r\n        \"description\" : `${description}`,\r\n        \"rate\" : `${rate}`,\r\n        \"drinkid\" : `${drinkid}`\r\n    }\r\n    try{\r\n        let res = await mixologyClient.post('/review', credentials)//.then((response)=> console.log(response.data))\r\n        console.log(res.data)\r\n        console.log(res)\r\n\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e);\r\n        if(e.response){\r\n            throw new Error(e.resonse.data)\r\n        }else{\r\n            throw new Error(\"OOPs something else went wrong \")\r\n        }\r\n    }\r\n}\r\n\r\nexport const recommendLists = async () => {\r\n\r\n    try{\r\n        var returnList = [];\r\n        var res;\r\n       for(let v=32; v<35; v++){\r\n            res = await mixologyClient.get('/drinks/find/' + v) \r\n            returnList.push(res.data)\r\n       }\r\n       res = await mixologyClient.get('/drinks/find/36') \r\n       returnList.push(res.data)\r\n       \r\n       return returnList\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND INGREDIENTS LIST\")\r\n            console.log(\"cannot find ingr list\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx",["285","286","287"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {Icon} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport const FavouriteForm: React.FunctionComponent<any> = () =>{\r\n\r\n    const classes = useStyles();\r\n\r\n    const {handleSubmit} = useForm();\r\n\r\n    const submitFavourite = async (data:any) => {\r\n        console.log(data)\r\n        var userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\n        var drinkName = JSON.parse(sessionStorage.getItem(\"drinkName\"));\r\n        var drinkDegree = JSON.parse(sessionStorage.getItem(\"drinkDegree\"));\r\n        var drinkCreatorFirstName = JSON.parse(sessionStorage.getItem(\"drinkCreatorFirstName\"));\r\n        var drinkCreatorLastName = JSON.parse(sessionStorage.getItem(\"drinkCreatorLastName\"));\r\n        var drinkCreatorId = JSON.parse(sessionStorage.getItem(\"drinkCreatorId\"));\r\n        var drinkCreatorUsername = JSON.parse(sessionStorage.getItem(\"drinkCreatorUsername\"));\r\n        var drinkCreatorPassword = JSON.parse(sessionStorage.getItem(\"drinkCreatorPassword\"));\r\n        var drinkId = JSON.parse(sessionStorage.getItem(\"drinkId\"));\r\n\r\n\r\n     !userInfo && alert(\"Please Login\")\r\n     userInfo && await axios.post('http://3.134.99.157:10000/user/addFavorite',{\r\n\r\n            \"drink\": {\r\n            \"degree\": drinkDegree,\r\n                \"drinkCreator\": {\r\n                \"firstname\": drinkCreatorFirstName,\r\n                    \"id\": drinkCreatorId,\r\n                    \"lastname\": drinkCreatorLastName,\r\n                    \"password\": drinkCreatorPassword,\r\n                    \"username\": drinkCreatorUsername\r\n            },\r\n            \"id\": drinkId,\r\n                \"name\": drinkName\r\n        },\r\n            \"favoriteId\": 0,\r\n            \"user\": {\r\n            \"firstname\": \"string\",\r\n                \"id\": userInfo.id,\r\n                \"lastname\": userInfo.lastname,\r\n                \"password\": userInfo.password,\r\n                \"username\": userInfo.username\r\n            }\r\n\r\n        })\r\n            .then((response)=>{\r\n                alert(\"Added to favourites\")\r\n                console.log(\"succefully submitted your favorite drink!\", response.data)\r\n            })\r\n            .catch((err)=>{\r\n               alert(\"Please Login to add to Favorite\")\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"heart\" style={{width:\"30px\", height:\"30px\"}}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} noValidate onSubmit={ handleSubmit(submitFavourite)}>\r\n                    <Button type=\"submit\">\r\n                      <i className=\"fa fa-heart fa-3x text-danger\"></i>\r\n                    </Button>\r\n                    <p className=\"mx-3\">Fav!</p>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n        </div>\r\n    );\r\n        \r\n        \r\n        \r\n}\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\PopUpWindow\\PopUpForm.tsx",["288","289","290","291"],"import React , {Component} from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport { AddReviewForm } from '../AddReviewForms/AddReview';\r\nimport Wave from 'react-wavify'\r\n\r\n\r\nexport class PopUpForm extends React.Component<any>{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        let onHide \r\n        let show\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>        \r\n               <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Review\r\n                        </Modal.Title> */}\r\n                                  \r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className =\"container\">\r\n                            <AddReviewForm/>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {/* <Button variant = \"danger\" onClick={this.props.onHide}>Close</Button> Thank you! youve sevred us well*/} \r\n                          <Wave fill='#ff914d'\r\n                            paused={false}\r\n                            options={{\r\n                            height: 5,\r\n                            amplitude: 50,\r\n                            speed: 0.10,\r\n                            points: 3,\r\n                            }}\r\n                            />\r\n                    </Modal.Footer>\r\n                    </Modal>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["292"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport axios from 'axios'\r\n\r\n\r\nconst barStyle = {\r\n    backgroundColor: \"#ff914d\",\r\n    minHeight: \"15vh\"\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    borderRadius: \"50px\",\r\n    border: \"3px #ecf0f1 solid\",\r\n    margin: \"0.8rem\"\r\n}\r\n\r\nconst SearchButtonStyling = {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n    padding: \"10px 16px\",\r\n    borderRadius: \"35px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"1.33\",\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"Translate(-50%, -50%)\",\r\n    // border: \"1px solid #020202\",\r\n   // \"-webkit-box-shadow\": \"5px 5px 15px 5px #fcfcfc\",\r\n    //\"box-shadow\": \"2.5px 2.5px 15px 2.5px #e7caca\"\r\n}\r\n\r\nconst profileDivStyling = {\r\n    backgroundColor: \"rgba(255,243,205,0.2)\",\r\n    borderRadius: \"18px\",\r\n    // borderBottom:\"1px solid rgba(255,255,255,0.5)\",\r\n    padding: \"0\"\r\n}\r\n\r\n\r\nconst ProfileBar = (props:any) =>{\r\n\r\n const [ sliderValue, setSliderValue ] = useState(50); \r\n const [favorites, setFavorites] = useState([]);\r\n const [isHidden, setIsHidden] = useState(false)\r\n\r\n\r\n\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n \r\n        const getFavorites = async (e:any)=>{\r\n        e.preventDefault()\r\n        //console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        if(!isGuest){\r\n            const response = await axios.get(`http://3.134.99.157:10000/user/favoriteDrinks/${userInfo.id}`).catch((err)=>{console.log(err)})\r\n            setFavorites([])\r\n            \r\n\r\n            if((response && response.data)){\r\n                // console.log(response.data)\r\n                setFavorites(response.data)\r\n                console.log(response.data)\r\n            } \r\n\r\n            getHidden();\r\n        }else{\r\n            alert(\"Please login to check your favorite drinks\")\r\n        }\r\n    }\r\n\r\n\r\n    const getHidden = ()=>{\r\n        isHidden ? setIsHidden(false) :  setIsHidden(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n    }, [isHidden])\r\n\r\n    function addDrinkUrl(){\r\n        //****** Should change to Adding drink page URL ****** */\r\n        if(!isGuest){\r\n            window.location.href=\"./add-drink\"\r\n        }else{\r\n            alert(\"Please login!\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={barStyle} className=\"col-12\">\r\n            <div className=\"row p-3\">\r\n\r\n                <div className=\"col-sm-1\"></div>\r\n\r\n\r\n                <div style={profileDivStyling} className=\"col-12 col-sm-2 text-center\">\r\n                    <img style={imageStyle} src=\"https://i.pravatar.cc/50\" alt=\"Profile Picture of user\"/>\r\n                    <h5>{!isGuest? (userInfo.firstname + \"  \" + userInfo.lastname) : \"Guest\"} </h5>\r\n                    <p><span className=\"badge\">{!isGuest? (\"username : \" +userInfo.username) : \"\"}</span></p>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH ALL DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 text-center\">\r\n                    <form onSubmit={props.getCall1} style={{height:\"100%\"}}>\r\n                            <button  style={SearchButtonStyling} type=\"submit\" className=\"btn btn-success btn-circle btn-xl\">\r\n                                <i className=\"fa fa-cocktail\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">All Drinks</p>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH FAVORITE DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 text-center\">\r\n                    <form onSubmit={getFavorites} style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"submit\" className=\"btn btn-danger btn-circle btn-xl\">\r\n                                <i className=\"fa fa-heart\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Favorites</p>\r\n                    </form>\r\n                </div>\r\n                \r\n\r\n                 {/* SEARCH DRINKS BY INGREDIENT */}\r\n                {/* <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form className=\"form-inline\">\r\n\r\n                        <div className=\"form-group mx-sm-3 mb-2\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"ingredient\" placeholder=\"Search by Ingredient\" />\r\n                            <button type=\"submit\" className=\"btn btn-primary mb-2\">Search</button>\r\n                        </div>\r\n\r\n                        \r\n                    </form>\r\n                </div> */}\r\n\r\n\r\n\r\n                {/* SEARCH DRINKS BY ALCOHOL CONTENT */}\r\n                <div style={{}} className=\"col-12 col-sm-2 text-center\">\r\n\r\n                    <p className=\"badge\">Alcohol Content</p>  \r\n                    <form onSubmit={props.getCall3} style={{height:\"100%\"}}>\r\n                        <RangeSlider\r\n                            value={sliderValue}\r\n                            onChange={(changeEvent:any) => {\r\n                                    setSliderValue(changeEvent.target.value)\r\n                                    props.setValueSlider(sliderValue)\r\n                                    \r\n                                }\r\n                            }\r\n                            onAfterChange = {(e:any)=>{\r\n                                setSliderValue(e.target.value)\r\n                                props.setValueSlider(sliderValue)\r\n                                props.getCall3()\r\n                            }}\r\n                            // max = true\r\n                            variant='info'\r\n                            tooltip=\"auto\"\r\n                            tooltipLabel={(e:any) =>{\r\n                                return (`UP TO : ${props.getValueSlider()}% Alcohol`)\r\n                                // return props.valueSlider\r\n                            }}\r\n                        />\r\n                    </form>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n                {/* ADD DRINK*/}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"button\" className=\"btn btn-info btn-circle btn-xl\" onClick={addDrinkUrl} >\r\n                               <i className=\"fas fa-plus-circle\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Add Your Drink</p>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-sm-1\"></div>\r\n\r\n            </div>\r\n\r\n\r\n{/* HIDDEN ROW FOR FAV DRINKS */}\r\n{isHidden &&  <div className=\"row\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3 >Favorites</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        \r\n\r\n                            {favorites.map((element)=>{\r\n                                 return(\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"alert alert-warning badge\" role=\"alert\">\r\n                                            <i className=\"fas fa-cocktail fa-3x text-dark\"> &nbsp;</i>\r\n                                            <a className=\"text-dark\" style={{textDecoration:\"none\"}} href={`../drinks/${element.name}`}>{element.name} • {element.degree}%</a> \r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })     \r\n                            }\r\n\r\n                            \r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileBar\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],["293","294"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",["295"],"\r\n//new reg implementation\r\nimport React, {useState}from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LoginMain from './components/login/LoginMain';\r\nimport { Logout } from './components/login/Logout';\r\nimport { RegisterForm } from './components/RegisterForms/Register';\r\nimport ReviewMain from './components/review/ReviewMain';\r\nimport  DrinkMain  from './components/Drinks/DrinkMain';\r\nimport { AddReviewForm} from './components/AddReviewForms/AddReview';\r\nimport {CreateDrink} from './components/Drinks/AddDrinks/AddDrink'\r\nimport './App.css';\r\nimport MainPage from './components/MainPageComponents/MainPage';\r\nimport {SelectIngredient} from './components/Drinks/AddDrinks/SelectIngredient';\r\nimport Index from './components/Index'\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\" >\r\n      \r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path = \"/\"> <Index /> </Route>\r\n          <Route exact path = \"/login\"> <LoginMain /> </Route>\r\n          <Route exact path = \"/logout\"> <Logout /> </Route>\r\n          <Route path = \"/review\"> <ReviewMain /> </Route>\r\n          <Route exact path = \"/register\" component = {RegisterForm}/>\r\n          <Route path = \"/home\" component = {MainPage} />\r\n          <Route path = \"/drinks\" component = {DrinkMain} />\r\n          <Route path=\"/add-review\" component  = {AddReviewForm}/>\r\n          <Route path=\"/add-drink\" component  = {CreateDrink}/>\r\n          <Route path=\"/select-ingredient\" component  = {SelectIngredient}/>\r\n         \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx",["296"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",["297","298","299"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx",["300","301","302"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx",[],["303","304"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["305","306","307","308","309","310","311"],"import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport MainFooter from './MainFooter'\r\nimport MainBody from './MainBody'\r\nimport logo2 from './images/logo2.png'\r\n\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n  const MainHeader = ({setDrink})=>{\r\n\r\n  const [drinkName, setDrinkName] = useState('')\r\n  \r\n  const searchDrink = async (event:any)=>{\r\n    event.preventDefault()\r\n    //console.log(\"event.drinkname: \" + drinkName)\r\n    setDrink(drinkName)\r\n  }\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    let isHome = false;\r\n    if(window.location.href.substring(26,) == 'home') isHome = true; \r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"/home\"><img style={logoStyle} src={logo2} alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"#\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        {isHome ? \r\n          <form onSubmit={searchDrink} className=\"form-inline my-2 my-lg-0\">\r\n          <input id=\"drinkname\"  className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" onChange={event => setDrinkName(event.target.value)} />\r\n          <button style={{border:\"#ff914d solid 2px\"}} className=\"btn btn-outline- my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form>\r\n          :  ''\r\n         }\r\n        \r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\nexport default MainHeader\r\n","C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["312","313"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["314","315","316"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["317"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",["318","319"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx",["320","321"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx",["322","323"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx",["324","325","326"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\PopUpWindow\\PopUpForm.tsx",["327","328","329","330"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["331"],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",[],"C:\\Users\\rousb\\Desktop\\deployment\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"341","line":112,"column":8,"nodeType":"342","endLine":112,"endColumn":10,"suggestions":"343"},{"ruleId":"336","severity":1,"message":"337","line":1,"column":16,"nodeType":"338","messageId":"339","endLine":1,"endColumn":24},{"ruleId":"336","severity":1,"message":"344","line":37,"column":34,"nodeType":"338","messageId":"339","endLine":37,"endColumn":40},{"ruleId":"345","severity":1,"message":"346","line":63,"column":55,"nodeType":"347","messageId":"348","endLine":63,"endColumn":57},{"ruleId":"336","severity":1,"message":"349","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":16},{"ruleId":"336","severity":1,"message":"350","line":6,"column":10,"nodeType":"338","messageId":"339","endLine":6,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":85,"column":8,"nodeType":"342","endLine":85,"endColumn":10,"suggestions":"351"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"350","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":17},{"ruleId":"336","severity":1,"message":"352","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"353","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":18},{"ruleId":"336","severity":1,"message":"354","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":16},{"ruleId":"345","severity":1,"message":"355","line":59,"column":44,"nodeType":"347","messageId":"348","endLine":59,"endColumn":46},{"ruleId":"356","severity":1,"message":"357","line":62,"column":48,"nodeType":"358","endLine":62,"endColumn":109},{"ruleId":"359","severity":1,"message":"360","line":63,"column":7,"nodeType":"358","endLine":63,"endColumn":44},{"ruleId":"336","severity":1,"message":"361","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":26},{"ruleId":"336","severity":1,"message":"362","line":12,"column":11,"nodeType":"338","messageId":"339","endLine":12,"endColumn":16},{"ruleId":"336","severity":1,"message":"363","line":10,"column":10,"nodeType":"338","messageId":"339","endLine":10,"endColumn":13},{"ruleId":"336","severity":1,"message":"364","line":92,"column":13,"nodeType":"338","messageId":"339","endLine":92,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":119,"column":25,"nodeType":"358","endLine":119,"endColumn":110},{"ruleId":"336","severity":1,"message":"365","line":21,"column":10,"nodeType":"338","messageId":"339","endLine":21,"endColumn":14},{"ruleId":"336","severity":1,"message":"366","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":19},{"ruleId":"336","severity":1,"message":"367","line":43,"column":20,"nodeType":"338","messageId":"339","endLine":43,"endColumn":25},{"ruleId":"336","severity":1,"message":"366","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":19},{"ruleId":"336","severity":1,"message":"367","line":38,"column":20,"nodeType":"338","messageId":"339","endLine":38,"endColumn":25},{"ruleId":"336","severity":1,"message":"368","line":1,"column":8,"nodeType":"338","messageId":"339","endLine":1,"endColumn":13},{"ruleId":"369","severity":1,"message":"370","line":180,"column":13,"nodeType":"371","messageId":"372","endLine":180,"endColumn":49},{"ruleId":"336","severity":1,"message":"373","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":18},{"ruleId":"336","severity":1,"message":"374","line":9,"column":8,"nodeType":"338","messageId":"339","endLine":9,"endColumn":20},{"ruleId":"336","severity":1,"message":"375","line":10,"column":9,"nodeType":"338","messageId":"339","endLine":10,"endColumn":13},{"ruleId":"336","severity":1,"message":"361","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":26},{"ruleId":"336","severity":1,"message":"349","line":2,"column":16,"nodeType":"338","messageId":"339","endLine":2,"endColumn":22},{"ruleId":"336","severity":1,"message":"376","line":11,"column":13,"nodeType":"338","messageId":"339","endLine":11,"endColumn":19},{"ruleId":"336","severity":1,"message":"377","line":12,"column":13,"nodeType":"338","messageId":"339","endLine":12,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":113,"column":21,"nodeType":"358","endLine":113,"endColumn":107},{"ruleId":"332","replacedBy":"378"},{"ruleId":"334","replacedBy":"379"},{"ruleId":"336","severity":1,"message":"337","line":3,"column":16,"nodeType":"338","messageId":"339","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"341","line":112,"column":8,"nodeType":"342","endLine":112,"endColumn":10,"suggestions":"380"},{"ruleId":"336","severity":1,"message":"337","line":1,"column":16,"nodeType":"338","messageId":"339","endLine":1,"endColumn":24},{"ruleId":"336","severity":1,"message":"344","line":37,"column":34,"nodeType":"338","messageId":"339","endLine":37,"endColumn":40},{"ruleId":"345","severity":1,"message":"346","line":63,"column":55,"nodeType":"347","messageId":"348","endLine":63,"endColumn":57},{"ruleId":"336","severity":1,"message":"349","line":5,"column":10,"nodeType":"338","messageId":"339","endLine":5,"endColumn":16},{"ruleId":"336","severity":1,"message":"350","line":6,"column":10,"nodeType":"338","messageId":"339","endLine":6,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":85,"column":8,"nodeType":"342","endLine":85,"endColumn":10,"suggestions":"381"},{"ruleId":"332","replacedBy":"378"},{"ruleId":"334","replacedBy":"379"},{"ruleId":"336","severity":1,"message":"350","line":2,"column":10,"nodeType":"338","messageId":"339","endLine":2,"endColumn":17},{"ruleId":"336","severity":1,"message":"352","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":13},{"ruleId":"336","severity":1,"message":"353","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":18},{"ruleId":"336","severity":1,"message":"354","line":5,"column":8,"nodeType":"338","messageId":"339","endLine":5,"endColumn":16},{"ruleId":"345","severity":1,"message":"355","line":59,"column":44,"nodeType":"347","messageId":"348","endLine":59,"endColumn":46},{"ruleId":"356","severity":1,"message":"357","line":62,"column":48,"nodeType":"358","endLine":62,"endColumn":109},{"ruleId":"359","severity":1,"message":"360","line":63,"column":7,"nodeType":"358","endLine":63,"endColumn":44},{"ruleId":"336","severity":1,"message":"361","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":26},{"ruleId":"336","severity":1,"message":"362","line":12,"column":11,"nodeType":"338","messageId":"339","endLine":12,"endColumn":16},{"ruleId":"336","severity":1,"message":"363","line":10,"column":10,"nodeType":"338","messageId":"339","endLine":10,"endColumn":13},{"ruleId":"336","severity":1,"message":"364","line":93,"column":13,"nodeType":"338","messageId":"339","endLine":93,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":120,"column":25,"nodeType":"358","endLine":120,"endColumn":110},{"ruleId":"336","severity":1,"message":"365","line":21,"column":10,"nodeType":"338","messageId":"339","endLine":21,"endColumn":14},{"ruleId":"336","severity":1,"message":"368","line":1,"column":8,"nodeType":"338","messageId":"339","endLine":1,"endColumn":13},{"ruleId":"369","severity":1,"message":"370","line":180,"column":13,"nodeType":"371","messageId":"372","endLine":180,"endColumn":49},{"ruleId":"336","severity":1,"message":"366","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":19},{"ruleId":"336","severity":1,"message":"367","line":38,"column":20,"nodeType":"338","messageId":"339","endLine":38,"endColumn":25},{"ruleId":"336","severity":1,"message":"366","line":1,"column":10,"nodeType":"338","messageId":"339","endLine":1,"endColumn":19},{"ruleId":"336","severity":1,"message":"367","line":43,"column":20,"nodeType":"338","messageId":"339","endLine":43,"endColumn":25},{"ruleId":"336","severity":1,"message":"373","line":4,"column":8,"nodeType":"338","messageId":"339","endLine":4,"endColumn":18},{"ruleId":"336","severity":1,"message":"374","line":9,"column":8,"nodeType":"338","messageId":"339","endLine":9,"endColumn":20},{"ruleId":"336","severity":1,"message":"375","line":10,"column":9,"nodeType":"338","messageId":"339","endLine":10,"endColumn":13},{"ruleId":"336","severity":1,"message":"361","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":26},{"ruleId":"336","severity":1,"message":"349","line":2,"column":16,"nodeType":"338","messageId":"339","endLine":2,"endColumn":22},{"ruleId":"336","severity":1,"message":"376","line":11,"column":13,"nodeType":"338","messageId":"339","endLine":11,"endColumn":19},{"ruleId":"336","severity":1,"message":"377","line":12,"column":13,"nodeType":"338","messageId":"339","endLine":12,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":113,"column":21,"nodeType":"358","endLine":113,"endColumn":107},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIngredients'. Either include it or remove the dependency array.","ArrayExpression",["384"],"'errors' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'useForm' is defined but never used.",["385"],"'axios' is defined but never used.","'MainFooter' is defined but never used.","'MainBody' is defined but never used.","Expected '===' and instead saw '=='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'items' is assigned a value but never used.","'red' is defined but never used.","'userInfo' is assigned a value but never used.","'call' is assigned a value but never used.","'emphasize' is defined but never used.","'index' is assigned a value but never used.","'React' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.","'Icon' is defined but never used.","'onHide' is defined but never used.","'show' is defined but never used.",["382"],["383"],["386"],["387"],"no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},{"desc":"388","fix":"390"},{"desc":"388","fix":"391"},{"desc":"388","fix":"392"},"Update the dependencies array to be: [getIngredients]",{"range":"393","text":"394"},{"range":"395","text":"394"},{"range":"396","text":"394"},{"range":"397","text":"394"},[3347,3349],"[getIngredients]",[2873,2875],[3347,3349],[2873,2875]]