[{"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"1","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"2","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"3","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"4","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"5","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"6","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"7","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"8","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\models\\User.ts":"9","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"10","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"11","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"12","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"13","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"14","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"15","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"16","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"17","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"18","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"19","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx":"20","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx":"21","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx":"22","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts":"23"},{"size":517,"mtime":1610033464958,"results":"24","hashOfConfig":"25"},{"size":440,"mtime":1610033464960,"results":"26","hashOfConfig":"25"},{"size":1609,"mtime":1610574836995,"results":"27","hashOfConfig":"25"},{"size":4686,"mtime":1610488414875,"results":"28","hashOfConfig":"25"},{"size":347,"mtime":1610470907089,"results":"29","hashOfConfig":"25"},{"size":1373,"mtime":1610470907084,"results":"30","hashOfConfig":"25"},{"size":374,"mtime":1610470907086,"results":"31","hashOfConfig":"25"},{"size":2167,"mtime":1610470907087,"results":"32","hashOfConfig":"25"},{"size":133,"mtime":1610330981913,"results":"33","hashOfConfig":"25"},{"size":304,"mtime":1610470907093,"results":"34","hashOfConfig":"25"},{"size":2422,"mtime":1610470907092,"results":"35","hashOfConfig":"25"},{"size":388,"mtime":1610470907078,"results":"36","hashOfConfig":"25"},{"size":1747,"mtime":1610470907095,"results":"37","hashOfConfig":"25"},{"size":3480,"mtime":1610470907072,"results":"38","hashOfConfig":"25"},{"size":2034,"mtime":1610470907077,"results":"39","hashOfConfig":"25"},{"size":2583,"mtime":1610747601356,"results":"40","hashOfConfig":"25"},{"size":1247,"mtime":1610470907080,"results":"41","hashOfConfig":"25"},{"size":1824,"mtime":1610470907090,"results":"42","hashOfConfig":"25"},{"size":245,"mtime":1610470907082,"results":"43","hashOfConfig":"25"},{"size":3084,"mtime":1610747925619,"results":"44","hashOfConfig":"25"},{"size":2015,"mtime":1610747923601,"results":"45","hashOfConfig":"25"},{"size":1341,"mtime":1610738078341,"results":"46","hashOfConfig":"25"},{"size":238,"mtime":1610740402361,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"n5radi",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],["105","106"],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",["107"],"import React, {  } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport MainHeader from '../MainPageComponents/MainHeader';\r\n\r\nimport { Route } from 'react-router';\r\nimport { Link as RLink } from 'react-router-dom';\r\nfunction Copyright() {\r\n  return (\r\n    <>\r\n    <Route path =\"/home\"/>\r\n      \r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <RLink color=\"inherit\" to = \"/home\">\r\n        Mixology-101\r\n      </RLink>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const RegisterForm: React.FunctionComponent<any> = () =>{\r\n  const classes = useStyles();\r\n\r\n const {register, handleSubmit} = useForm();\r\n\r\n\r\n const submitRegister = async (data:any)=>{\r\n     console.log(data)\r\n      await axios.post('http://localhost:8080/user',{\r\n         \"firstname\": data.firstname,\r\n         \"id\": 0,\r\n         \"lastname\": data.lastname,\r\n         \"password\": data.password,\r\n         \"username\": data.username\r\n      })\r\n      .then((response)=>{\r\n         console.log(\"succefully registered!\", response.data)\r\n         \r\n      })\r\n      .catch((e)=>{\r\n        console.log(e)\r\n      })\r\n }\r\n\r\n \r\n  return (\r\n  \r\n  <>\r\n    <MainHeader/>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit ={handleSubmit(submitRegister)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstname\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                inputRef = {register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastname\"\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                autoComplete=\"lastname\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Route path = \"/home\"/> \r\n              <RLink to = \"/home\" >\r\n                Already have an account? Sign in\r\n              </RLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={4}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["108","109"],"import React, { Component , useState, useEffect} from 'react';\r\n// import getAllDrinks from '../../utils/asyncCalls';\r\nimport DrinkCard from './DrinksCard/DrinkCard'\r\nimport ProfileBar from './ProfileBar/ProfileBar'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst bodyStyle = {\r\n  minHeight: '87vh',\r\n  backgroundColor: \"whitesmoke\",\r\n  overflow: \"auto\"\r\n}\r\n\r\nconst styleHead = {\r\n    height: '200vh'\r\n}\r\n\r\n\r\n\r\nconst MainBody = ()=>{\r\n\r\n    const [drinks, setDrinks] = useState([])\r\n\r\n\r\n    const getDrinks = async ()=>{\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n\r\n        if(response && response.data){\r\n            setDrinks(response.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrinks()\r\n    }, []) // if bracket is present, empty bracket means it only run once on on mounting\r\n\r\n\r\n\r\n    \r\n    return(\r\n        \r\n\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div className=\"row\">\r\n                <ProfileBar />\r\n            </div>\r\n            <div className=\"row\">\r\n                {drinks.map((element)=>{\r\n                    return(<DrinkCard key={element.id} id={element.id}  name={element.name} degree={element.degree} creator={element.drinkCreator.username}/>)  \r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainBody","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["110"],"import React, { Component } from 'react';\r\n\r\n\r\nconst MainFooter = ()=>{\r\n\r\n    return(\r\n\r\n        <footer className=\"bg-dark text-light text-center text-lg-start\" >\r\n            <div className=\"text-center p-3 text-dark\" >\r\n                <a className=\"text-light\" href=\"#!\"> Mixology.com </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default MainFooter","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["111","112","113","114","115","116"],"import React, {useState} from 'react';\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n\r\nconst MainHeader = ()=>{\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"../login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"../logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"#\"><img style={logoStyle} src=\"logo2.png\" alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"#\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        \r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MainHeader","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\models\\User.ts",[],["117","118"],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",["119","120"],"import React from 'react'\r\nimport { reviewList } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { Review } from './Review'\r\n\r\nexport class ViewReview extends React.Component<any,any> {\r\n   constructor(props:any){\r\n       super(props);\r\n       this.state = {\r\n           drinkId: 0,\r\n           currentReviewList: [],\r\n           listCnt: 0,\r\n           drinkName: \"\" \r\n       }\r\n      \r\n   }\r\n\r\n   async componentDidMount() {\r\n        let _drinkId = window.location.href.substr(-1)\r\n        this.setState({drinkId: _drinkId})\r\n        try {\r\n            let res = await reviewList(_drinkId);\r\n            this.setState({ currentReviewList: res });\r\n            this.setState({drinkName: res[0].drink.name})\r\n            while(this.state.listCnt < res.length){\r\n                console.log(this.state.currentReviewList[this.state.listCnt]);\r\n                this.setState({listCnt:this.state.listCnt+1})\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n   }\r\n\r\n\r\n    render() {\r\n        const returnList = []\r\n        for(const [index, value] of this.state.currentReviewList.entries()){\r\n               returnList.push(<tr><td>{value.id}</td><td>{value.description}</td><td>{value.rate}</td><td>{value.author.username}</td></tr>)\r\n        }\r\n        \r\n        return (\r\n            //<Review />\r\n            <div>\r\n            DrinkName:  {this.state.drinkName}\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>REVIEW_ID</th><th>DESCRIPTION</th><th>RATE</th><th>EVALUATOR</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {returnList}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/*\r\n\r\n \r\n*/\r\n","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",["121","122","123","124"],"import React, {Component, Props, SyntheticEvent, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const AddReviewForm: React.FunctionComponent<any> = () =>{\r\n\r\n  const classes = useStyles();\r\n\r\n  const {register, handleSubmit} = useForm();\r\n\r\n  const submitAddReview = async (data:any) => {\r\n    console.log(data)\r\n\r\n    await axios.post('http://localhost:8080/review',{\r\n      \"author\": {\r\n          \"firstname\": \"string\",\r\n          \"id\": 7,\r\n          \"lastname\": \"string\",\r\n          \"password\": \"string\",\r\n          \"username\": \"string\"\r\n    },\r\n      \"description\": data.description,\r\n        \"drink\": {\r\n      \"degree\": 10,\r\n          \"drinkCreator\": {\r\n            \"firstname\": \"azib\",\r\n            \"id\": 2,\r\n            \"lastname\": \"azib\",\r\n            \"password\": \"azib\",\r\n            \"username\": \"azib\"\r\n      },\r\n      \"id\": 1,\r\n          \"name\": \"water\"\r\n    },\r\n      \"id\": 0,\r\n        \"rate\": data.rate\r\n\r\n    })\r\n        .then((response)=>{\r\n          console.log(\"succefully submitted your review!\", response.data)\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n  }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline/>\r\n          <div className={classes.paper}>\r\n\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Add Review\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={ handleSubmit(submitAddReview)}>\r\n              <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      id=\"rate\"\r\n                      label=\"Rating\"\r\n                      name=\"rate\"\r\n                      autoComplete=\"rate\"\r\n                      inputRef={register}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      type=\"description\"\r\n                      id=\"description\"\r\n                      autoComplete=\"description\"\r\n                      inputRef={register}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n            </form>\r\n          </div>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["125"],"import React from 'react';\r\nimport { drinkInfo } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\n\r\n\r\nconst imageStyle = {\r\n    width: \"20%\",\r\n    height: \"250px\",\r\n    margin: \"30px 0 30px 30px\"\r\n}\r\n\r\nconst contentStyle = {\r\n    width: \"15%\",\r\n    margin: \"30px 0 0 0\"\r\n}\r\n\r\n\r\nexport class DrinkBody extends React.Component<any,any> {\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            drinkName: \"\",\r\n            degree: 0,\r\n            Ingredient: [\"a\",\"b\"],\r\n            creator: \"\"\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let name = window.location.href.substring(29,)\r\n        console.log(\"drinkName: \" + name)\r\n        let res = await drinkInfo(name)\r\n        this.setState({drinkName: res.name})\r\n        this.setState({degree: res.degree})\r\n        //this.setState({Ingredient})\r\n        this.setState({creator: (res.drinkCreator.firstname +\" \"+ res.drinkCreator.lastname)})\r\n        console.log(this.state.drinkName)\r\n    }\r\n  \r\n   render(){\r\n    return(\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <img style={imageStyle} className=\"card-img-top\" src=\"https://www.thecocktaildb.com/images/media/drink/vrwquq1478252802.jpg/preview\" alt=\"Card image cap\" />\r\n                    <p style={contentStyle}>\r\n                    Name: <strong > {this.state.drinkName}</strong><br />\r\n                    Degree:  {this.state.degree}<br />\r\n                    Ingredient: {this.state.Ingredient}<br />\r\n                    Creator: {this.state.creator}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                   Recipe Info\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                   Review\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n   }\r\n\r\n}\r\n\r\n","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",["126"],"import React from 'react'\r\nimport DrinkName from './DrinkName'\r\n\r\nconst cardStyle = {\r\n    width: \"70%\",\r\n        borderRadius: \"18px\"\r\n}\r\n\r\nconst imageStyle = {\r\n    width: \"100%\",\r\n    height: \"250px\",\r\n    \r\n}\r\n\r\n\r\nconst DrinkCard:any = (props:any)=>{\r\n\r\n    console.log(props)\r\n    let reviewUrl = \"../review/\" + props.id;\r\n    \r\n    return(\r\n    <div className=\"col-12 col-sm-6 col-md-6 col-lg-3 my-3 text-center\">\r\n        <div className=\"card\" style={cardStyle}>\r\n            <img style={imageStyle} className=\"card-img-top\" src=\"https://www.thecocktaildb.com/images/media/drink/vrwquq1478252802.jpg/preview\" alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n                <DrinkName key={props.id} id={props.id}  name={props.name} degree={props.degree} creator={props.username}/>\r\n                <small className=\"badge badge-pill bg-warning text-dark \"> {props.degree}% {/*will be an object later */}</small> &nbsp;\r\n                <p className=\"text-right btn badge btn-secondary\"><a href={reviewUrl}>Reviews</a> </p>\r\n                <p className=\"card-text\">Created by: {props.creator}</p>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n        \r\n    </div>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default DrinkCard","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["127","128","129","130","131","132"],"import { BorderAllOutlined, Translate } from '@material-ui/icons'\r\nimport { profile } from 'console'\r\nimport React from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport $ from 'jquery';\r\n\r\nconst barStyle = {\r\n    backgroundColor: \"salmon\"\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    borderRadius: \"50px\",\r\n    border: \"3px lightblue solid\",\r\n    margin: \"0.8rem\"\r\n}\r\n\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n const ProfileBar = () =>{\r\n\r\n    \r\n    return(\r\n        <div style={barStyle} className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4\">\r\n                    <img style={imageStyle} src=\"https://i.pravatar.cc/50\" alt=\"Profile Picture of user\"/>\r\n                    <h5>{!isGuest? (userInfo.firstname + \"  \" + userInfo.lastname) : \"Guest\"} </h5>\r\n                    <p>{!isGuest? (\"username : \" +userInfo.username +\" | id: \" + userInfo.id) : \"\"}</p>\r\n                </div>\r\n                <div style={{}} className=\"col-12 col-sm-4\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlSelect1\">Search by </label>\r\n                            <select className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                            <option>Favorite</option>\r\n                            <option>Strength</option>\r\n                            <option>Review</option>\r\n                            <option>Ingredient</option>\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n    export default ProfileBar","C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddDrink.tsx",["133","134","135"],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\SelectIngredient.tsx",["136","137"],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\AddDrinks\\AddIngredient.tsx",[],"C:\\Users\\Domanic Yalda\\Desktop\\Revature Training\\projects\\Project-Two-Frontend\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":12},{"ruleId":"142","severity":1,"message":"146","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"147","line":15,"column":7,"nodeType":"144","messageId":"145","endLine":15,"endColumn":16},{"ruleId":"142","severity":1,"message":"146","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"148","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":33,"column":11,"nodeType":"151","endLine":33,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":47,"column":7,"nodeType":"151","endLine":47,"endColumn":44},{"ruleId":"152","severity":1,"message":"153","line":47,"column":44,"nodeType":"151","endLine":47,"endColumn":109},{"ruleId":"149","severity":1,"message":"150","line":48,"column":7,"nodeType":"151","endLine":48,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":57,"column":13,"nodeType":"151","endLine":57,"endColumn":46},{"ruleId":"138","replacedBy":"154"},{"ruleId":"140","replacedBy":"155"},{"ruleId":"142","severity":1,"message":"156","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"157","line":36,"column":20,"nodeType":"144","messageId":"145","endLine":36,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":32},{"ruleId":"142","severity":1,"message":"159","line":1,"column":34,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"142","severity":1,"message":"148","line":1,"column":50,"nodeType":"144","messageId":"145","endLine":1,"endColumn":58},{"ruleId":"152","severity":1,"message":"153","line":46,"column":21,"nodeType":"151","endLine":46,"endColumn":177},{"ruleId":"152","severity":1,"message":"153","line":24,"column":13,"nodeType":"151","endLine":24,"endColumn":169},{"ruleId":"142","severity":1,"message":"160","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":27},{"ruleId":"142","severity":1,"message":"161","line":1,"column":29,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"162","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":17},{"ruleId":"142","severity":1,"message":"163","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":17},{"ruleId":"142","severity":1,"message":"164","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":9},{"ruleId":"152","severity":1,"message":"153","line":36,"column":21,"nodeType":"151","endLine":36,"endColumn":107},{"ruleId":"142","severity":1,"message":"165","line":3,"column":17,"nodeType":"144","messageId":"145","endLine":3,"endColumn":26},{"ruleId":"142","severity":1,"message":"148","line":3,"column":28,"nodeType":"144","messageId":"145","endLine":3,"endColumn":36},{"ruleId":"142","severity":1,"message":"166","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":19},{"ruleId":"142","severity":1,"message":"166","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":42,"column":8,"nodeType":"169","endLine":42,"endColumn":10,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'styleHead' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["171"],["172"],"'Review' is defined but never used.","'index' is assigned a value but never used.","'Props' is defined but never used.","'SyntheticEvent' is defined but never used.","'BorderAllOutlined' is defined but never used.","'Translate' is defined but never used.","'profile' is defined but never used.","'SearchBar' is defined but never used.","'$' is defined but never used.","'useEffect' is defined but never used.","'addRecipe' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIngredients'. Either include it or remove the dependency array.","ArrayExpression",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [getIngredients]",{"range":"176","text":"177"},[1211,1213],"[getIngredients]"]
[{"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"1","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"2","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"3","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"4","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"5","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"6","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"7","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"8","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"9","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"10","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"11","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"12","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"13","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx":"14","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"15","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"16","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"17","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"18","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts":"19","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"20","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx":"21","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx":"22","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx":"23","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx":"24"},{"size":664,"mtime":1610643788158,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1609962034956,"results":"27","hashOfConfig":"26"},{"size":1396,"mtime":1610739739276,"results":"28","hashOfConfig":"26"},{"size":3609,"mtime":1610643788154,"results":"29","hashOfConfig":"26"},{"size":4672,"mtime":1610486903850,"results":"30","hashOfConfig":"26"},{"size":343,"mtime":1610486903852,"results":"31","hashOfConfig":"26"},{"size":388,"mtime":1610486903844,"results":"32","hashOfConfig":"26"},{"size":1513,"mtime":1610643788157,"results":"33","hashOfConfig":"26"},{"size":347,"mtime":1610486903848,"results":"34","hashOfConfig":"26"},{"size":4299,"mtime":1610663738923,"results":"35","hashOfConfig":"26"},{"size":2740,"mtime":1610663738925,"results":"36","hashOfConfig":"26"},{"size":2179,"mtime":1610643788152,"results":"37","hashOfConfig":"26"},{"size":396,"mtime":1610643788151,"results":"38","hashOfConfig":"26"},{"size":1880,"mtime":1610643788155,"results":"39","hashOfConfig":"26"},{"size":3321,"mtime":1610643788151,"results":"40","hashOfConfig":"26"},{"size":4417,"mtime":1610663738923,"results":"41","hashOfConfig":"26"},{"size":1312,"mtime":1610643788149,"results":"42","hashOfConfig":"26"},{"size":6557,"mtime":1610643788153,"results":"43","hashOfConfig":"26"},{"size":238,"mtime":1610486903857,"results":"44","hashOfConfig":"26"},{"size":309,"mtime":1610643788150,"results":"45","hashOfConfig":"26"},{"size":538,"mtime":1610643788154,"results":"46","hashOfConfig":"26"},{"size":389,"mtime":1610643788156,"results":"47","hashOfConfig":"26"},{"size":1155,"mtime":1610643788148,"results":"48","hashOfConfig":"26"},{"size":3415,"mtime":1610741419172,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"l36y7h",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],["109","110"],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",["111","112"],"\r\n//new reg implementation\r\nimport RegisterComponent from './components/RegisterForms/Register2'\r\nimport React, {useState}from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LoginMain from './components/login/LoginMain';\r\nimport { Logout } from './components/login/Logout';\r\nimport { RegisterForm } from './components/RegisterForms/Register';\r\nimport ReviewMain from './components/review/ReviewMain';\r\nimport  DrinkMain  from './components/Drinks/DrinkMain';\r\nimport { AddReviewForm} from './components/AddReviewForms/AddReview';\r\nimport './App.css';\r\nimport MainPage from './components/MainPageComponents/MainPage';\r\nimport {FavouriteForm} from \"./components/Favourite/Favourite\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route path = \"/login\"> <LoginMain /> </Route>\r\n          <Route path = \"/logout\"> <Logout /> </Route>\r\n          <Route path = \"/review\"> <ReviewMain /> </Route>\r\n          <Route path = \"/register\" component = {RegisterForm}/>\r\n          <Route path = \"/home\" component = {MainPage} />\r\n          <Route path = \"/drinks\" component = {DrinkMain} />\r\n          <Route path = \"/addReview\" component  = {AddReviewForm}/>\r\n          <Route path = \"/favourite\" component  = {FavouriteForm}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",["113"],"import React, {  } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport MainHeader from '../MainPageComponents/MainHeader';\r\n\r\nimport { Route } from 'react-router';\r\nimport { Link as RLink } from 'react-router-dom';\r\nfunction Copyright() {\r\n  return (\r\n    <>\r\n    <Route path =\"/home\"/>\r\n      \r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <RLink color=\"inherit\" to = \"/home\">\r\n        Mixology-101\r\n      </RLink>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const RegisterForm: React.FunctionComponent<any> = () =>{\r\n  const classes = useStyles();\r\n\r\n const {register, handleSubmit} = useForm();\r\n\r\n\r\n const submitRegister = async (data:any)=>{\r\n     console.log(data)\r\n      await axios.post('http://localhost:8080/user',{\r\n         \"firstname\": data.firstname,\r\n         \"id\": 0,\r\n         \"lastname\": data.lastname,\r\n         \"password\": data.password,\r\n         \"username\": data.username\r\n      })\r\n      .then((response)=>{\r\n         console.log(\"succefully registered!\", response.data)\r\n         \r\n      })\r\n      .catch((err)=>{console.log(err)})\r\n }\r\n\r\n \r\n  return (\r\n  \r\n  <>\r\n    <MainHeader/>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit ={handleSubmit(submitRegister)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstname\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                inputRef = {register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastname\"\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                autoComplete=\"lastname\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Route path = \"/home\"/> \r\n              <RLink to = \"/home\" >\r\n                Already have an account? Sign in\r\n              </RLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={4}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["114","115","116"],"import React, {useState} from 'react';\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n\r\nconst MainHeader = ()=>{\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"#\"><img style={logoStyle} src=\"logo2.png\" alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"/home\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        \r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MainHeader","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["117"],"import React, { Component } from 'react';\r\n\r\n\r\nconst MainFooter = ()=>{\r\n\r\n    return(\r\n\r\n        <footer className=\"bg-dark text-light text-center text-lg-start\" style={{marginTop:50}}>\r\n            <div className=\"text-center p-3 text-dark\" >\r\n                <a className=\"text-light\" href=\"#!\"> Mixology.com </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default MainFooter","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx",["118"],"import React from 'react';\r\nimport { reviewList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Review extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        super(props);\r\n        console.log(\"Review_constructor_props_drinkId: \" + props.drinkId)\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            currentReviewList: [],\r\n            listCnt: 0,\r\n            drinkName: \"\" \r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await reviewList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ currentReviewList: res });\r\n            this.setState({ drinkName: res[0].drink.name})\r\n            while(this.state.listCnt < res.length){\r\n                console.log(this.state.currentReviewList[this.state.listCnt]);\r\n            this.setState({listCnt:this.state.listCnt+1})\r\n        }\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.currentReviewList.entries()){\r\n            returnList.push(<tr><td>{value.id}</td><td>{value.description}</td><td>{value.rate}</td><td>{value.author.username}</td></tr>)\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 <h5 >DrinkName: {this.state.drinkName}</h5>\r\n            <table style={{ marginLeft:20}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>REVIEW_ID</th><th>DESCRIPTION</th><th>RATE</th><th>EVALUATOR</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n               {returnList}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["119","120","121","122"],"import React, { Component , useState, useEffect} from 'react';\r\n// import getAllDrinks from '../../utils/asyncCalls';\r\nimport DrinkCard from './DrinksCard/DrinkCard'\r\nimport ProfileBar from './ProfileBar/ProfileBar'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst bodyStyle = {\r\n  minHeight: '87vh',\r\n  backgroundColor: \"whitesmoke\",\r\n//   background: \"url('./avatarbg.png')\",\r\n//   backgroundSize:\"contain\",\r\n//   backgroundRepeat: \"no-repeat\",\r\n//   backgroundPosition: \"center\",\r\n  overflow: \"auto\"\r\n}\r\n\r\nconst styleHead = {\r\n    height: '200vh'\r\n}\r\n\r\n\r\n\r\nconst MainBody = ()=>{\r\n\r\n    const [drinks, setDrinks] = useState([])\r\n    let [call, setCall] = useState(null)\r\n    const [ valueSlider, setValueSlider ] = useState(50); //Tracks the slider\r\n\r\n\r\n\r\n\r\n    const getCall1 = (e:Event)=>{ //DONE\r\n        e.preventDefault();\r\n        getAllDrinks();\r\n        setCall(1)\r\n    }\r\n\r\n    const getCall2 = (e:Event)=>{\r\n        e.preventDefault();\r\n        setCall(2)\r\n    }\r\n\r\n    const getCall3 = ()=>{ //WORKING\r\n        console.log(\"call 3 being called\")\r\n        getDrinkByAlcoholContent()\r\n        setCall(3)\r\n    }\r\n\r\n    const getCall4 = (e:Event)=>{\r\n        e.preventDefault();\r\n        setCall(4)\r\n    }\r\n\r\n\r\n\r\n\r\n// useEffect(() => {}, [valueSlider])\r\n\r\n\r\n\r\n\r\n    const getAllDrinks = async ()=>{\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n\r\n            if((response && response.data)){\r\n            setDrinks(response.data)\r\n            \r\n        } \r\n        \r\n    }\r\n\r\n    const getDrinkByAlcoholContent = async ()=>{\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n        setDrinks([])\r\n        \r\n\r\n            if((response && response.data)){\r\n            // console.log(response.data)\r\n            response.data.forEach((element:any) => {\r\n                if(parseInt(element.degree) <= valueSlider){\r\n                    setDrinks(oldArray=>[...oldArray, element]);\r\n                }\r\n                \r\n            })\r\n            \r\n        } \r\n        console.log(\"getdrinksbyalcoholcontentEND\")\r\n\r\n    }\r\n\r\n    const getValueSlider = (()=>{\r\n        console.log(\"valueSlider has been set to \", valueSlider)\r\n        return valueSlider\r\n    })\r\n\r\n  \r\n    \r\n    \r\n    \r\n    // call === 1 ? getAllDrinks() : console.log()\r\n    // call === 3 ? getDrinkByAlcoholContent() : console.log()\r\n\r\n\r\n//  useEffect(() => {}, []);\r\n//  useEffect(() => {}, [])\r\n\r\n    return(\r\n        \r\n\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div className=\"row\">\r\n                <ProfileBar \r\n                getCall1={getCall1} getCall2={getCall2} getCall3={getCall3} getCall4={getCall4} \r\n                setValueSlider={setValueSlider} getValueSlider={getValueSlider} valueSlider={valueSlider}\r\n                />  \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n\r\n\r\n                {\r\n                drinks.map((element)=>{\r\n                    return(<DrinkCard key={element.id} id={element.id}  name={element.name} degree={element.degree} creator={element.drinkCreator.username}/>)  \r\n                })}\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainBody","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["123"],"import React from 'react';\r\nimport { drinkInfoByName } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { drinkInfo } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { Ingredients } from './Ingredients'\r\nimport { Review } from '../review/Review'\r\nimport { Button} from '@material-ui/core'\r\n\r\nconst imageStyle = {\r\n    width: \"20%\",\r\n    height: \"250px\",\r\n    margin: \"30px 0 30px 30px\"\r\n}\r\n\r\nconst bodyStyle = {\r\n    minHeight: '87vh',\r\n    backgroundColor: \"whitesmoke\",\r\n    overflow: \"auto\"\r\n}\r\n\r\n\r\nconst contentStyle = {\r\n    width: \"15%\",\r\n    margin: \"30px 0 0 0\"\r\n}\r\n\r\n\r\nexport class DrinkBody extends React.Component<any,any> {\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            drinkId: 0,\r\n            drinkName: \"\",\r\n            degree: 0,\r\n            Ingredient: [\"a\",\"b\"],\r\n            creator: \"\"\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let name = window.location.href.substring(29,)\r\n\r\n         let response = await drinkInfo(name)\r\n         this.setState({drinkName: response.name})\r\n         this.setState({degree: response.degree})\r\n         this.setState({creator: (response.drinkCreator.firstname +\" \"+ response.drinkCreator.lastname)})\r\n\r\n\r\n        // setting drink info in session\r\n         sessionStorage.setItem(\"drinkName\",  JSON.stringify(name))\r\n         sessionStorage.setItem(\"drinkdegree\",  JSON.stringify(response.degree))\r\n         sessionStorage.setItem(\"drinkCreatorFirstName\",  JSON.stringify(response.drinkCreator.firstname))\r\n         sessionStorage.setItem(\"drinkCreatorLastName\",  JSON.stringify(response.drinkCreator.lastname))\r\n         sessionStorage.setItem(\"drinkCreatorId\", JSON.stringify(response.drinkCreator.id))\r\n         sessionStorage.setItem(\"drinkCreatorUsername\", JSON.stringify(response.drinkCreator.username))\r\n         sessionStorage.setItem(\"drinkCreatorPassword\", JSON.stringify(response.drinkCreator.password))\r\n         sessionStorage.setItem(\"drinkId\", JSON.stringify(response.id))\r\n\r\n\r\n\r\n         let res = drinkInfoByName(name)\r\n         res.then((data) =>{\r\n             console.log(\"in DrinkBody, res.id: \" + data.id)\r\n             this.setState({drinkId: data.id})\r\n             this.setState({drinkName: data.name})\r\n             this.setState({degree: data.degree})\r\n             //this.setState({Ingredient})\r\n             this.setState({creator: (data.drinkCreator.firstname +\" \"+ data.drinkCreator.lastname)})\r\n             console.log(this.state.drinkName)\r\n         })\r\n\r\n        \r\n    }\r\n  \r\n   render(){\r\n   \r\n    return(\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div >\r\n                <div className=\"row\">\r\n                    <img style={imageStyle} className=\"card-img-top\" src=\"https://www.thecocktaildb.com/images/media/drink/vrwquq1478252802.jpg/preview\" alt=\"Card image cap\" />\r\n                    <p style={contentStyle}>\r\n                    Name: <strong > {this.state.drinkName}</strong><br />\r\n                    Degree:  {this.state.degree}<br />\r\n                    Ingredient: {this.state.Ingredient}<br />\r\n                    Creator: {this.state.creator}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 20 }}>** Ingredients **\r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle}>Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\"  style={{ marginLeft:20}}>\r\n                    <Ingredients  key={this.state.drinkId} drinkId={this.state.drinkId} />\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 50, marginRight:40}}>** Review ** \r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle} href=\"/addReview\">Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\" >\r\n                <Review key={this.state.drinkId} drinkId={this.state.drinkId} drinkName={this.state.drinkName} reviewList={this.state.currentReviewList} creator={this.state.creator}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n   }\r\n\r\n}\r\n\r\nvar btnStyle = {\r\n    height: 30,\r\n};","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["124","125","126","127","128","129","130","131","132","133"],"import { BorderAllOutlined, Translate } from '@material-ui/icons'\r\nimport { profile } from 'console'\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport SearchBar from './SearchBar'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst barStyle = {\r\n    backgroundColor: \"salmon\",\r\n    minHeight: \"15vh\"\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    borderRadius: \"50px\",\r\n    border: \"3px lightblue solid\",\r\n    margin: \"0.8rem\"\r\n}\r\n\r\nconst SearchButtonStyling = {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n    padding: \"10px 16px\",\r\n    borderRadius: \"35px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"1.33\",\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"Translate(-50%, -50%)\",\r\n    border: \"1px solid #020202\",\r\n   // \"-webkit-box-shadow\": \"5px 5px 15px 5px #fcfcfc\",\r\n    //\"box-shadow\": \"2.5px 2.5px 15px 2.5px #e7caca\"\r\n}\r\n\r\n\r\nconst ProfileBar = (props:any) =>{\r\n\r\n const [ sliderValue, setSliderValue ] = useState(50); \r\n const [favorites, setFavorites] = useState([]);\r\n\r\n\r\n\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n    const getFavorites = async (e:any)=>{\r\n        e.preventDefault()\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get(`http://localhost:8080/user/favoriteDrinks/${userInfo.id}`).catch((err)=>{console.log(err)})\r\n        setFavorites([])\r\n        \r\n\r\n        if((response && response.data)){\r\n            // console.log(response.data)\r\n            setFavorites(response.data)\r\n        } \r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div style={barStyle} className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4\">\r\n                    <img style={imageStyle} src=\"https://i.pravatar.cc/50\" alt=\"Profile Picture of user\"/>\r\n                    <h5>{!isGuest? (userInfo.firstname + \"  \" + userInfo.lastname) : \"Guest\"} </h5>\r\n                    <p>{!isGuest? (\"username : \" +userInfo.username +\" | id: \" + userInfo.id) : \"\"}</p>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH ALL DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={props.getCall1} style={{height:\"100%\"}}>\r\n                            <button  style={SearchButtonStyling} type=\"submit\" className=\"btn btn-success btn-circle btn-xl\">\r\n                                <i className=\"fa fa-cocktail\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">All Drinks</p>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH FAVORITE DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={getFavorites} style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"submit\" className=\"btn btn-danger btn-circle btn-xl\">\r\n                                <i className=\"fa fa-heart\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Favorites</p>\r\n                    </form>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n                {/* SEARCH DRINKS BY ALCOHOL CONTENT */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n\r\n                    <p>Alcohol Content</p>  \r\n                    <form onSubmit={props.getCall3} style={{height:\"100%\"}}>\r\n                        <RangeSlider\r\n                            value={sliderValue}\r\n                            onChange={(changeEvent:any) => {\r\n                                    setSliderValue(changeEvent.target.value)\r\n                                    props.setValueSlider(sliderValue)\r\n                                    \r\n                                }\r\n                            }\r\n                            onAfterChange = {(e:any)=>{\r\n                                setSliderValue(e.target.value)\r\n                                props.setValueSlider(sliderValue)\r\n                                props.getCall3()\r\n                            }}\r\n                            // max = true\r\n                            variant='info'\r\n                            tooltip=\"auto\"\r\n                            tooltipLabel={(e:any) =>{\r\n                                return (`UP TO : ${props.getValueSlider()}% Alcohol`)\r\n                                // return props.valueSlider\r\n                            }}\r\n                        />\r\n                    </form>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n                {/* SEARCH DRINKS BY INGREDIENT */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"button\" className=\"btn btn-info btn-circle btn-xl\">\r\n                                <i className=\"fas fa-mortar-pestle\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Search By Ingridient</p>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n{/* HIDDEN ROW FOR FAV DRINKS */}\r\n            <div className=\"row\">\r\n                <div className=\"container\">\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3 >Favorites</h3>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                            {favorites.map((element)=>{\r\n                                 return(\r\n                                    <div className=\"alert alert-success\" role=\"alert\">\r\n                                        <a className=\"text-dark\" style={{textDecorationColor:\"black\"}} href=\"\">{element.name} • {element.degree}%</a> \r\n                                    </div>\r\n                                )\r\n                            })     \r\n                            }\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileBar\r\n\r\n","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",["134"],"import React,{useState} from 'react'\r\n\r\nconst DrinkName:any = (props:any)=>{\r\n\r\n    let drinkUrl = \"../drinks/\" + props.name;\r\n\r\n    return(\r\n        <h5><strong><a href={drinkUrl} style={aStyle}>{props.name}</a></strong></h5>\r\n    )\r\n}\r\nvar aStyle = {\r\n    color: 'black',\r\n    \r\n};\r\nexport default DrinkName","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx",[],"C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx",["135"],"import React from 'react';\r\nimport { ingredientsList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Ingredients extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            ingredientsList: []\r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await ingredientsList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ ingredientsList: res });\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } else {\r\n                throw new Error(\"ERROR ON CALLING INGREDIENTS\")\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.ingredientsList.entries()){\r\n            returnList.push(value.name + \", \")\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 {returnList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\syeda\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Favourite\\Favourite.tsx",["136","137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":4,"column":16,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"148","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":47,"column":7,"nodeType":"151","endLine":47,"endColumn":44},{"ruleId":"152","severity":1,"message":"153","line":47,"column":44,"nodeType":"151","endLine":47,"endColumn":109},{"ruleId":"143","severity":1,"message":"154","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"155","line":42,"column":20,"nodeType":"145","messageId":"146","endLine":42,"endColumn":25},{"ruleId":"143","severity":1,"message":"154","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"156","line":1,"column":39,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"157","line":19,"column":7,"nodeType":"145","messageId":"146","endLine":19,"endColumn":16},{"ruleId":"143","severity":1,"message":"158","line":28,"column":10,"nodeType":"145","messageId":"146","endLine":28,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":82,"column":21,"nodeType":"151","endLine":82,"endColumn":177},{"ruleId":"143","severity":1,"message":"159","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"160","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":38},{"ruleId":"143","severity":1,"message":"161","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"156","line":3,"column":27,"nodeType":"145","messageId":"146","endLine":3,"endColumn":36},{"ruleId":"143","severity":1,"message":"162","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":17},{"ruleId":"143","severity":1,"message":"163","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":22},{"ruleId":"143","severity":1,"message":"164","line":7,"column":24,"nodeType":"145","messageId":"146","endLine":7,"endColumn":30},{"ruleId":"143","severity":1,"message":"165","line":7,"column":32,"nodeType":"145","messageId":"146","endLine":7,"endColumn":38},{"ruleId":"152","severity":1,"message":"153","line":81,"column":21,"nodeType":"151","endLine":81,"endColumn":107},{"ruleId":"149","severity":1,"message":"150","line":174,"column":41,"nodeType":"151","endLine":174,"endColumn":112},{"ruleId":"143","severity":1,"message":"147","line":1,"column":15,"nodeType":"145","messageId":"146","endLine":1,"endColumn":23},{"ruleId":"143","severity":1,"message":"155","line":37,"column":20,"nodeType":"145","messageId":"146","endLine":37,"endColumn":25},{"ruleId":"143","severity":1,"message":"166","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"167","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":20},{"ruleId":"143","severity":1,"message":"168","line":10,"column":9,"nodeType":"145","messageId":"146","endLine":10,"endColumn":13},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'RegisterComponent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Component' is defined but never used.","'index' is assigned a value but never used.","'useEffect' is defined but never used.","'styleHead' is assigned a value but never used.","'call' is assigned a value but never used.","'BorderAllOutlined' is defined but never used.","'Translate' is defined but never used.","'profile' is defined but never used.","'SearchBar' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]
