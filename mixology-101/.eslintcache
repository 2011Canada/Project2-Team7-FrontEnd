[{"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"1","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"2","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"3","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"4","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"5","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"6","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"7","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"8","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"9","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"10","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"11","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"12","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"13","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"14","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"15","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"16","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"17","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts":"18","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"19","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\SearchBar.tsx":"20","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx":"21","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx":"22","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx":"23","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx":"24","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Spring\\Spring.jsx":"25","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx":"26"},{"size":664,"mtime":1610602388484,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":1493,"mtime":1610751034492,"results":"30","hashOfConfig":"28"},{"size":343,"mtime":1610740105266,"results":"31","hashOfConfig":"28"},{"size":442,"mtime":1610740116853,"results":"32","hashOfConfig":"28"},{"size":401,"mtime":1610740116844,"results":"33","hashOfConfig":"28"},{"size":3857,"mtime":1610748958775,"results":"34","hashOfConfig":"28"},{"size":4971,"mtime":1610748934357,"results":"35","hashOfConfig":"28"},{"size":4299,"mtime":1610740116843,"results":"36","hashOfConfig":"28"},{"size":1513,"mtime":1610740105300,"results":"37","hashOfConfig":"28"},{"size":502,"mtime":1610746479366,"results":"38","hashOfConfig":"28"},{"size":6426,"mtime":1610740348489,"results":"39","hashOfConfig":"28"},{"size":2667,"mtime":1610740400938,"results":"40","hashOfConfig":"28"},{"size":4381,"mtime":1610740116844,"results":"41","hashOfConfig":"28"},{"size":3110,"mtime":1610740116858,"results":"42","hashOfConfig":"28"},{"size":1312,"mtime":1610740116846,"results":"43","hashOfConfig":"28"},{"size":6935,"mtime":1610740229424,"results":"44","hashOfConfig":"28"},{"size":238,"mtime":1610472411355,"results":"45","hashOfConfig":"28"},{"size":292,"mtime":1610750019881,"results":"46","hashOfConfig":"28"},{"size":1951,"mtime":1610471637341,"results":"47","hashOfConfig":"28"},{"size":765,"mtime":1610746635693,"results":"48","hashOfConfig":"28"},{"size":402,"mtime":1610740116857,"results":"49","hashOfConfig":"28"},{"size":1881,"mtime":1610740116856,"results":"50","hashOfConfig":"28"},{"size":1155,"mtime":1610740116845,"results":"51","hashOfConfig":"28"},{"size":551,"mtime":1610744899393,"results":"52","hashOfConfig":"28"},{"size":770,"mtime":1610748128485,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"6qyo62",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],["114","115"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",["116","117","118","119"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["120"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["121"],"import React, {useState, useEffect} from 'react';\r\n// import getAllDrinks from '../../utils/asyncCalls';\r\nimport DrinkCard from './DrinksCard/DrinkCard'\r\nimport ProfileBar from './ProfileBar/ProfileBar'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst bodyStyle = {\r\n  minHeight: '87vh',\r\n  backgroundColor: \"whitesmoke\",\r\n  overflow: \"auto\"\r\n}\r\n\r\nconst MainBody = (props)=>{\r\n    \r\n    \r\n   // console.log(\"MainBody Start\")\r\n    const [drinks, setDrinks] = useState([])\r\n    let [call, setCall] = useState(null)\r\n    let [cnt, setCnt] = useState(1)\r\n    let [drinkName, setName] = useState(props.myDrink)\r\n    const [ valueSlider, setValueSlider ] = useState(50); //Tracks the slider\r\n    const [ingredient, setIngredient] = useState(\"\")\r\n    const {register, handleSubmit} = useForm()\r\n\r\n    useEffect(() => {\r\n        console.log(\"USEEFFECT INGRIDIENT SET\", ingredient)\r\n    }, [ingredient])\r\n\r\n     useEffect(() => {document.title = \"Home\"}, [])\r\n    \r\n    \r\n    const setTheDrink = async (dName:any)=>{\r\n       // console.log(\"setTheDrink Start\")\r\n        setName(dName)\r\n        setCnt(1)\r\n        setDrinks([])\r\n        const response =  await axios.get(`http://localhost:8080/drinks/drinkName/${dName}`).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        if(response && response.data){\r\n            //console.log(\"response.data: \"+ response.data)\r\n            setDrinks([response.data])\r\n        }\r\n        \r\n        // else{\r\n        //     alert(`${dName} DOES NOT EXIST`)\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    if(cnt === 1){\r\n       // console.log(\"Here because of cnt == 1\")\r\n        if( props.myDrink !== null && props.myDrink !== '' && props.myDrink !== undefined){\r\n            setTheDrink(props.myDrink);\r\n            setCnt(cnt+1)\r\n        }\r\n    }\r\n\r\n    if(drinkName !== props.myDrink){\r\n        //console.log(\"drinkName !== props.myDrink\")\r\n        \r\n        setTheDrink(props.myDrink);\r\n    }\r\n    \r\n  \r\n\r\n    const getCall1 = (e:Event)=>{ //DONE\r\n        e.preventDefault();\r\n        getAllDrinks();\r\n        setCall(1)\r\n    }\r\n\r\n    let getCall2 = (data:any)=>{\r\n        console.log(data, \"DATA INGRIDIENT INSIDE CALL 2\")\r\n        setCall(2)\r\n        setIngredient(data.ingredient)\r\n        getDrinksByIngredientName(data.ingredient);\r\n    }\r\n\r\n    const getCall3 = ()=>{ //WORKING\r\n        console.log(\"call 3 being called\")\r\n        getDrinkByAlcoholContent()\r\n        setCall(3)\r\n    }\r\n\r\n    const getCall4 = (e:Event)=>{\r\n        e.preventDefault();\r\n        setCall(4)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const getAllDrinks = async ()=>{\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n\r\n        if((response && response.data)){\r\n            \r\n            setDrinks([])\r\n            response.data.forEach((element:any) => {\r\n                if(parseInt(element.degree) <= valueSlider){\r\n                    setDrinks(oldArray=>[...oldArray, element]);\r\n                }\r\n                \r\n            })\r\n        } \r\n        \r\n    }\r\n\r\n\r\n    const getDrinkByAlcoholContent = async ()=>{\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n        setDrinks([])\r\n        \r\n\r\n        if((response && response.data)){\r\n            // console.log(response.data)\r\n            response.data.forEach((element:any) => {\r\n                if(parseInt(element.degree) <= valueSlider){\r\n                    setDrinks(oldArray=>[...oldArray, element]);\r\n                }\r\n                \r\n            })\r\n            \r\n        } \r\n        console.log(\"getdrinksbyalcoholcontentEND\")\r\n\r\n    }\r\n\r\n    const getValueSlider = (()=>{\r\n        // console.log(\"valueSlider has been set to \", valueSlider)\r\n        return valueSlider\r\n    })\r\n\r\n    const getDrinksByIngredientName = async (ing)=>{\r\n        console.log(ingredient, \"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\")\r\n        console.log(\"START OF  GET DRINK BY ING NAME SEARCH\")\r\n        const response = await axios.get(`http://localhost:8080/drinks/ingredientName/${ing}`).catch((err)=>{console.log(err)})\r\n        setDrinks([])\r\n\r\n            if((response && response.data)){\r\n\r\n            setDrinks(response.data)\r\n            \r\n        } \r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        \r\n        \r\n\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div className=\"row\">\r\n                <ProfileBar \r\n                getCall1={getCall1} getCall2={getCall2} getCall3={getCall3} getCall4={getCall4} \r\n                setValueSlider={setValueSlider} getValueSlider={getValueSlider} valueSlider={valueSlider}\r\n                />  \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {(drinks.length > 0)  && \r\n                                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                                    <form className=\"form-inline\" onSubmit={handleSubmit(getCall2)}>\r\n                                        <div className=\"form-group mx-sm-3 mb-2\">\r\n                                            <input type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            name=\"ingredient\" \r\n                                            placeholder=\"Search by Ingredient\" \r\n                                            ref={register()}\r\n                                            />\r\n                                            <button type=\"submit\" className=\"btn btn-primary mb-2\">Search</button>\r\n                                        </div> \r\n                                    </form>\r\n                                </div> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {\r\n                drinks.map((element)=>{\r\n                    return(\r\n                    \r\n                    <DrinkCard key={element.id} id={element.id}  name={element.name} degree={element.degree} creator={element.drinkCreator.username}/>\r\n                    )  \r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainBody","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["122","123","124","125","126","127","128"],"import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport MainFooter from './MainFooter'\r\nimport MainBody from './MainBody'\r\nimport logo2 from './images/logo2.png'\r\n\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n  const MainHeader = ({setDrink})=>{\r\n\r\n  const [drinkName, setDrinkName] = useState('')\r\n  \r\n  const searchDrink = async (event:any)=>{\r\n    event.preventDefault()\r\n    console.log(\"event.drinkname: \" + drinkName)\r\n    setDrink(drinkName)\r\n  }\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"#\"><img style={logoStyle} src={logo2} alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"#\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        \r\n        <form onSubmit={searchDrink} className=\"form-inline my-2 my-lg-0\">\r\n            <input id=\"drinkname\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" onChange={event => setDrinkName(event.target.value)} />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\nexport default MainHeader\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["129"],"import React from 'react';\r\nimport { drinkInfoByName } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { drinkInfo } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { Ingredients } from './Ingredients'\r\nimport { Review } from '../review/Review'\r\nimport { Button} from '@material-ui/core'\r\n\r\nconst imageStyle = {\r\n    width: \"20%\",\r\n    height: \"250px\",\r\n    margin: \"30px 0 30px 30px\"\r\n}\r\n\r\nconst bodyStyle = {\r\n    minHeight: '87vh',\r\n    backgroundColor: \"whitesmoke\",\r\n    overflow: \"auto\"\r\n}\r\n\r\n\r\nconst contentStyle = {\r\n    width: \"15%\",\r\n    margin: \"30px 0 0 0\"\r\n}\r\n\r\n\r\nexport class DrinkBody extends React.Component<any,any> {\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            drinkId: 0,\r\n            drinkName: \"\",\r\n            degree: 0,\r\n            Ingredient: [\"a\",\"b\"],\r\n            creator: \"\"\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let name = window.location.href.substring(29,)\r\n\r\n        let res = drinkInfoByName(name)\r\n        res.then((data) =>{\r\n            console.log(\"in DrinkBody, res.id: \" + data.id)\r\n            this.setState({drinkId: data.id})\r\n            this.setState({drinkName: data.name})\r\n            this.setState({degree: data.degree})\r\n            //this.setState({Ingredient})\r\n            this.setState({creator: (data.drinkCreator.firstname +\" \"+ data.drinkCreator.lastname)})\r\n            console.log(this.state.drinkName)\r\n        })\r\n\r\n        let response = await drinkInfo(name)\r\n        this.setState({drinkName: response.name})\r\n        this.setState({degree: response.degree})\r\n        this.setState({creator: (response.drinkCreator.firstname +\" \"+ response.drinkCreator.lastname)})\r\n\r\n\r\n        // setting drink info in session\r\n        sessionStorage.setItem(\"drinkName\",  JSON.stringify(name))\r\n        sessionStorage.setItem(\"drinkdegree\",  JSON.stringify(response.degree))\r\n        sessionStorage.setItem(\"drinkCreatorFirstName\",  JSON.stringify(response.drinkCreator.firstname))\r\n        sessionStorage.setItem(\"drinkCreatorLastName\",  JSON.stringify(response.drinkCreator.lastname))\r\n        sessionStorage.setItem(\"drinkCreatorId\", JSON.stringify(response.drinkCreator.id))\r\n        sessionStorage.setItem(\"drinkCreatorUsername\", JSON.stringify(response.drinkCreator.username))\r\n        sessionStorage.setItem(\"drinkCreatorPassword\", JSON.stringify(response.drinkCreator.password))\r\n        sessionStorage.setItem(\"drinkId\", JSON.stringify(response.id))\r\n\r\n    }\r\n  \r\n   render(){\r\n   \r\n    return(\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div >\r\n                <div className=\"row\">\r\n                    <img style={imageStyle} className=\"card-img-top\" src=\"https://www.thecocktaildb.com/images/media/drink/vrwquq1478252802.jpg/preview\" alt=\"Card image cap\" />\r\n                    <p style={contentStyle}>\r\n                    Name: <strong > {this.state.drinkName}</strong><br />\r\n                    Degree:  {this.state.degree}<br />\r\n                    Ingredient: {this.state.Ingredient}<br />\r\n                    Creator: {this.state.creator}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 20 }}>** Ingredients **\r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle}>Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\"  style={{ marginLeft:20}}>\r\n                    <Ingredients  key={this.state.drinkId} drinkId={this.state.drinkId} />\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 50, marginRight:40}}>** Review ** \r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle} href=\"/addReview\">Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\" >\r\n                <Review key={this.state.drinkId} drinkId={this.state.drinkId} drinkName={this.state.drinkName} reviewList={this.state.currentReviewList} creator={this.state.creator}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n   }\r\n\r\n}\r\n\r\nvar btnStyle = {\r\n    height: 30,\r\n};","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["130","131","132","133"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport axios from 'axios'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nconst barStyle = {\r\n    backgroundColor: \"salmon\",\r\n    minHeight: \"15vh\"\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    borderRadius: \"50px\",\r\n    border: \"3px lightblue solid\",\r\n    margin: \"0.8rem\"\r\n}\r\n\r\nconst SearchButtonStyling = {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n    padding: \"10px 16px\",\r\n    borderRadius: \"35px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"1.33\",\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"Translate(-50%, -50%)\",\r\n    border: \"1px solid #020202\",\r\n   // \"-webkit-box-shadow\": \"5px 5px 15px 5px #fcfcfc\",\r\n    //\"box-shadow\": \"2.5px 2.5px 15px 2.5px #e7caca\"\r\n}\r\n\r\n\r\nconst ProfileBar = (props:any) =>{\r\n\r\n const [ sliderValue, setSliderValue ] = useState(50); \r\n const [favorites, setFavorites] = useState([]);\r\n const [isHidden, setIsHidden] = useState(false)\r\n\r\n\r\n\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n    const getFavorites = async (e:any)=>{\r\n        e.preventDefault()\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get(`http://localhost:8080/user/favoriteDrinks/${userInfo.id}`).catch((err)=>{console.log(err)})\r\n        setFavorites([])\r\n        \r\n\r\n        if((response && response.data)){\r\n            // console.log(response.data)\r\n            setFavorites(response.data)\r\n            console.log(response.data)\r\n        } \r\n\r\n        getHidden();\r\n    }\r\n\r\n    const getHidden = ()=>{\r\n        isHidden ? setIsHidden(false) :  setIsHidden(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n    }, [isHidden])\r\n\r\n\r\n    return(\r\n        <div style={barStyle} className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4\">\r\n                    <img style={imageStyle} src=\"https://i.pravatar.cc/50\" alt=\"Profile Picture of user\"/>\r\n                    <h5>{!isGuest? (userInfo.firstname + \"  \" + userInfo.lastname) : \"Guest\"} </h5>\r\n                    <p>{!isGuest? (\"username : \" +userInfo.username +\" | id: \" + userInfo.id) : \"\"}</p>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH ALL DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={props.getCall1} style={{height:\"100%\"}}>\r\n                            <button  style={SearchButtonStyling} type=\"submit\" className=\"btn btn-success btn-circle btn-xl\">\r\n                                <i className=\"fa fa-cocktail\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">All Drinks</p>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH FAVORITE DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={getFavorites} style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"submit\" className=\"btn btn-danger btn-circle btn-xl\">\r\n                                <i className=\"fa fa-heart\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Favorites</p>\r\n                    </form>\r\n                </div>\r\n                \r\n\r\n                 {/* SEARCH DRINKS BY INGREDIENT */}\r\n                {/* <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form className=\"form-inline\">\r\n\r\n                        <div className=\"form-group mx-sm-3 mb-2\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"ingredient\" placeholder=\"Search by Ingredient\" />\r\n                            <button type=\"submit\" className=\"btn btn-primary mb-2\">Search</button>\r\n                        </div>\r\n\r\n                        \r\n                    </form>\r\n                </div> */}\r\n\r\n\r\n\r\n                {/* SEARCH DRINKS BY ALCOHOL CONTENT */}\r\n                <div style={{}} className=\"col-12 col-sm-4 \">\r\n\r\n                    <p>Alcohol Content</p>  \r\n                    <form onSubmit={props.getCall3} style={{height:\"100%\"}}>\r\n                        <RangeSlider\r\n                            value={sliderValue}\r\n                            onChange={(changeEvent:any) => {\r\n                                    setSliderValue(changeEvent.target.value)\r\n                                    props.setValueSlider(sliderValue)\r\n                                    \r\n                                }\r\n                            }\r\n                            onAfterChange = {(e:any)=>{\r\n                                setSliderValue(e.target.value)\r\n                                props.setValueSlider(sliderValue)\r\n                                props.getCall3()\r\n                            }}\r\n                            // max = true\r\n                            variant='info'\r\n                            tooltip=\"auto\"\r\n                            tooltipLabel={(e:any) =>{\r\n                                return (`UP TO : ${props.getValueSlider()}% Alcohol`)\r\n                                // return props.valueSlider\r\n                            }}\r\n                        />\r\n                    </form>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n               \r\n\r\n            </div>\r\n\r\n\r\n{/* HIDDEN ROW FOR FAV DRINKS */}\r\n{isHidden &&  <div className=\"row\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3 >Favorites</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        \r\n\r\n                            {favorites.map((element)=>{\r\n                                 return(\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"alert alert-success badge\" role=\"alert\">\r\n                                            <a className=\"text-dark\" style={{textDecorationColor:\"black\"}} href={`../drinks/${element.name}`}>{element.name} • {element.degree}%</a> \r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })     \r\n                            }\r\n\r\n                            \r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileBar\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\SearchBar.tsx",["134"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx",[],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx",["135"],"import React from 'react';\r\nimport { reviewList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Review extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        super(props);\r\n       //console.log(\"Review_constructor_props_drinkId: \" + props.drinkId)\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            currentReviewList: [],\r\n            listCnt: 0,\r\n            drinkName: \"\" \r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await reviewList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ currentReviewList: res });\r\n            this.setState({ drinkName: res[0].drink.name})\r\n            while(this.state.listCnt < res.length){\r\n                console.log(this.state.currentReviewList[this.state.listCnt]);\r\n            this.setState({listCnt:this.state.listCnt+1})\r\n        }\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.currentReviewList.entries()){\r\n            returnList.push(<tr><td>{value.id}</td><td>{value.description}</td><td>{value.rate}</td><td>{value.author.username}</td></tr>)\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 <h5 >DrinkName: {this.state.drinkName}</h5>\r\n            <table style={{ marginLeft:20}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>REVIEW_ID</th><th>DESCRIPTION</th><th>RATE</th><th>EVALUATOR</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n               {returnList}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx",["136"],"import React from 'react';\r\nimport { ingredientsList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Ingredients extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            ingredientsList: []\r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await ingredientsList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ ingredientsList: res });\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } else {\r\n                throw new Error(\"ERROR ON CALLING INGREDIENTS\")\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.ingredientsList.entries()){\r\n            returnList.push(value.name + \", \")\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 {returnList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Spring\\Spring.jsx",[],["137","138"],"C:\\Users\\rousb\\Desktop\\projectWorkspace\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Index.jsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":4,"column":16,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"148","line":14,"column":9,"nodeType":"145","messageId":"146","endLine":14,"endColumn":15},{"ruleId":"143","severity":1,"message":"149","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":17},{"ruleId":"143","severity":1,"message":"150","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"151","line":21,"column":10,"nodeType":"145","messageId":"146","endLine":21,"endColumn":14},{"ruleId":"143","severity":1,"message":"152","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"153","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"154","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"155","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":60,"column":7,"nodeType":"158","endLine":60,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":60,"column":44,"nodeType":"158","endLine":60,"endColumn":105},{"ruleId":"156","severity":1,"message":"157","line":61,"column":7,"nodeType":"158","endLine":61,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":79,"column":21,"nodeType":"158","endLine":79,"endColumn":177},{"ruleId":"143","severity":1,"message":"161","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":14},{"ruleId":"143","severity":1,"message":"162","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":12},{"ruleId":"143","severity":1,"message":"163","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":11},{"ruleId":"159","severity":1,"message":"160","line":91,"column":21,"nodeType":"158","endLine":91,"endColumn":107},{"ruleId":"164","severity":1,"message":"165","line":54,"column":10,"nodeType":"166","messageId":"167","endLine":54,"endColumn":12},{"ruleId":"143","severity":1,"message":"168","line":42,"column":20,"nodeType":"145","messageId":"146","endLine":42,"endColumn":25},{"ruleId":"143","severity":1,"message":"168","line":37,"column":20,"nodeType":"145","messageId":"146","endLine":37,"endColumn":25},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'RegisterComponent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Spring' is defined but never used.","'Container' is defined but never used.","'Component' is defined but never used.","'call' is assigned a value but never used.","'useForm' is defined but never used.","'axios' is defined but never used.","'MainFooter' is defined but never used.","'MainBody' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'index' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
