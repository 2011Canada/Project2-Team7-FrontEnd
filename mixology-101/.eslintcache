[{"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx":"1","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts":"2","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx":"3","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx":"4","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx":"5","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx":"6","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx":"7","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx":"8","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx":"9","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx":"10","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx":"11","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx":"12","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx":"13","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx":"14","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx":"15","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx":"16","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts":"17","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx":"18","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx":"19","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx":"20","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx":"21","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx":"22","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts":"23","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts":"24"},{"size":664,"mtime":1610732014362,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1609972374017,"results":"27","hashOfConfig":"26"},{"size":1262,"mtime":1610756602594,"results":"28","hashOfConfig":"26"},{"size":401,"mtime":1610732014242,"results":"29","hashOfConfig":"26"},{"size":442,"mtime":1610732014337,"results":"30","hashOfConfig":"26"},{"size":553,"mtime":1610732014349,"results":"31","hashOfConfig":"26"},{"size":343,"mtime":1610604324674,"results":"32","hashOfConfig":"26"},{"size":4299,"mtime":1610752527768,"results":"33","hashOfConfig":"26"},{"size":402,"mtime":1610732014359,"results":"34","hashOfConfig":"26"},{"size":4673,"mtime":1610756602607,"results":"35","hashOfConfig":"26"},{"size":396,"mtime":1610604324646,"results":"36","hashOfConfig":"26"},{"size":4548,"mtime":1610732014332,"results":"37","hashOfConfig":"26"},{"size":4367,"mtime":1610756602598,"results":"38","hashOfConfig":"26"},{"size":2638,"mtime":1610752527777,"results":"39","hashOfConfig":"26"},{"size":1513,"mtime":1610604324788,"results":"40","hashOfConfig":"26"},{"size":3609,"mtime":1610604324670,"results":"41","hashOfConfig":"26"},{"size":3110,"mtime":1610756602613,"results":"42","hashOfConfig":"26"},{"size":1155,"mtime":1610732014245,"results":"43","hashOfConfig":"26"},{"size":1881,"mtime":1610732014355,"results":"44","hashOfConfig":"26"},{"size":1278,"mtime":1610752527774,"results":"45","hashOfConfig":"26"},{"size":6440,"mtime":1610756602604,"results":"46","hashOfConfig":"26"},{"size":290,"mtime":1610756602601,"results":"47","hashOfConfig":"26"},{"size":188,"mtime":1610756602609,"results":"48","hashOfConfig":"26"},{"size":238,"mtime":1610756602611,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l6bmro",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\index.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\reportWebVitals.ts",[],["107","108"],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\App.tsx",["109","110"],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkMain.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainPage.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginMain.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\Logout.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\AddReviewForms\\AddReview.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ReviewMain.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\RegisterForms\\Register.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainFooter.tsx",["111"],"import React, { Component } from 'react';\r\n\r\n\r\nconst MainFooter = ()=>{\r\n\r\n    return(\r\n\r\n        <footer className=\"bg-dark text-light text-center text-lg-start\" >\r\n            <div className=\"text-center p-3 text-dark\" >\r\n                <a className=\"text-light\" href=\"#!\"> Mixology.com </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default MainFooter","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainBody.tsx",["112"],"import React, { Component , useState, useEffect} from 'react';\r\n// import getAllDrinks from '../../utils/asyncCalls';\r\nimport DrinkCard from './DrinksCard/DrinkCard'\r\nimport ProfileBar from './ProfileBar/ProfileBar'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst bodyStyle = {\r\n  minHeight: '87vh',\r\n  backgroundColor: \"whitesmoke\",\r\n  overflow: \"auto\"\r\n}\r\n\r\nconst styleHead = {\r\n    height: '200vh'\r\n}\r\n\r\n\r\n\r\nconst MainBody = ()=>{\r\n\r\n    const [drinks, setDrinks] = useState([])\r\n \r\n    let [call, setCall] = useState(null)\r\n\r\n\r\n    const getCallAll = (e:Event)=>{\r\n        e.preventDefault();\r\n        setCall(call = 1)\r\n    }\r\n\r\n    const getDrinks = async ()=>{\r\n        const response = await axios.get('http://localhost:8080/drinks').catch((err)=>{console.log(err)})\r\n\r\n            if((response && response.data)){\r\n            setDrinks(response.data)\r\n            \r\n        } \r\n        setCall(null);\r\n    }\r\n    \r\n    \r\n    //call === 1 ? getDrinks() : console.log(\"none\")\r\n\r\n \r\n useEffect(() => {\r\n    getDrinks()\r\n    // console.log(\"does this update? call= \", call)\r\n    }, []);\r\n\r\n    return(\r\n        \r\n\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div className=\"row\">\r\n                <ProfileBar call={getCallAll} />  \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {drinks.map((element)=>{\r\n                    return(<DrinkCard key={element.id} id={element.id}  name={element.name} degree={element.degree} creator={element.drinkCreator.username}/>)  \r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainBody","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\DrinkBody.tsx",["113"],"import React from 'react';\r\nimport { drinkInfoByName } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { drinkInfo } from '../../remote/mixRemote/mixRemoteFunc'\r\nimport { Ingredients } from './Ingredients'\r\nimport { Review } from '../review/Review'\r\nimport { Button} from '@material-ui/core'\r\n\r\nconst imageStyle = {\r\n    width: \"20%\",\r\n    height: \"250px\",\r\n    margin: \"30px 0 30px 30px\"\r\n}\r\n\r\nconst bodyStyle = {\r\n    minHeight: '87vh',\r\n    backgroundColor: \"whitesmoke\",\r\n    overflow: \"auto\"\r\n}\r\n\r\n\r\nconst contentStyle = {\r\n    width: \"15%\",\r\n    margin: \"30px 0 0 0\"\r\n}\r\n\r\n\r\nexport class DrinkBody extends React.Component<any,any> {\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            drinkId: 0,\r\n            drinkName: \"\",\r\n            degree: 0,\r\n            Ingredient: [\"a\",\"b\"],\r\n            creator: \"\"\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let name = window.location.href.substring(29,)\r\n\r\n        let res = drinkInfoByName(name)\r\n        res.then((data) =>{\r\n            console.log(\"in DrinkBody, res.id: \" + data.id)\r\n            this.setState({drinkId: data.id})\r\n            this.setState({drinkName: data.name})\r\n            this.setState({degree: data.degree})\r\n            //this.setState({Ingredient})\r\n            this.setState({creator: (data.drinkCreator.firstname +\" \"+ data.drinkCreator.lastname)})\r\n            console.log(this.state.drinkName)\r\n        })\r\n\r\n        let response = await drinkInfo(name)\r\n        this.setState({drinkName: response.name})\r\n        this.setState({degree: response.degree})\r\n        this.setState({creator: (response.drinkCreator.firstname +\" \"+ response.drinkCreator.lastname)})\r\n\r\n\r\n        // setting drink info in session\r\n        sessionStorage.setItem(\"drinkName\",  JSON.stringify(name))\r\n        sessionStorage.setItem(\"drinkdegree\",  JSON.stringify(response.degree))\r\n        sessionStorage.setItem(\"drinkCreatorFirstName\",  JSON.stringify(response.drinkCreator.firstname))\r\n        sessionStorage.setItem(\"drinkCreatorLastName\",  JSON.stringify(response.drinkCreator.lastname))\r\n        sessionStorage.setItem(\"drinkCreatorId\", JSON.stringify(response.drinkCreator.id))\r\n        sessionStorage.setItem(\"drinkCreatorUsername\", JSON.stringify(response.drinkCreator.username))\r\n        sessionStorage.setItem(\"drinkCreatorPassword\", JSON.stringify(response.drinkCreator.password))\r\n        sessionStorage.setItem(\"drinkId\", JSON.stringify(response.id))\r\n\r\n    }\r\n  \r\n   render(){\r\n   \r\n    return(\r\n        <div className=\"container-fluid\" style={bodyStyle}>\r\n            <div >\r\n                <div className=\"row\">\r\n                    <img style={imageStyle} className=\"card-img-top\" src=\"https://www.thecocktaildb.com/images/media/drink/vrwquq1478252802.jpg/preview\" alt=\"Card image cap\" />\r\n                    <p style={contentStyle}>\r\n                    Name: <strong > {this.state.drinkName}</strong><br />\r\n                    Degree:  {this.state.degree}<br />\r\n                    Ingredient: {this.state.Ingredient}<br />\r\n                    Creator: {this.state.creator}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 20 }}>** Ingredients **\r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle}>Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\"  style={{ marginLeft:20}}>\r\n                    <Ingredients  key={this.state.drinkId} drinkId={this.state.drinkId} />\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <h4 style={{ marginLeft:20, marginTop: 50, marginRight:40}}>** Review ** \r\n                <Button type=\"submit\" variant=\"outlined\" style={btnStyle} href=\"/addReview\">Add</Button>\r\n                </h4>\r\n                </div>\r\n                <div className=\"row\" >\r\n                <Review key={this.state.drinkId} drinkId={this.state.drinkId} drinkName={this.state.drinkName} reviewList={this.state.currentReviewList} creator={this.state.creator}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n   }\r\n\r\n}\r\n\r\nvar btnStyle = {\r\n    height: 30,\r\n};","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\MainHeader.tsx",["114","115","116","117","118","119"],"import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport MainFooter from './MainFooter'\r\nimport MainBody from './MainBody'\r\n\r\nconst logoStyle = {\r\n  width: '4.5rem',\r\n  height: '4.5rem',\r\n  borderRadius: '50%',\r\n  padding: '5px'\r\n}\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n\r\n  const MainHeader = ({setDrink})=>{\r\n\r\n  const [drinkName, setDrinkName] = useState('')\r\n  \r\n  const searchDrink = async (event:any)=>{\r\n    event.preventDefault()\r\n    console.log(\"event.drinkname: \" + drinkName)\r\n    setDrink(drinkName)\r\n  }\r\n\r\n  let $loginBtn = null;\r\n  let $registBtn = null;\r\n\r\n  if (isGuest) {\r\n      $loginBtn = (\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">Login</a>\r\n        </li>\r\n      )\r\n      $registBtn = (\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/register\">Register</a>\r\n        </li>\r\n      )\r\n  } else {\r\n      $loginBtn = (  \r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/logout\">Logout</a>\r\n        </li>\r\n      )\r\n      $registBtn = null\r\n  }\r\n\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-logo\"  href=\"#\"><img style={logoStyle} src=\"logo2.png\" alt=\"Image showing logo\"/></a>\r\n      <a className=\"navbar-brand\" href=\"/home\">Mixology<sup>101</sup></a>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          {$loginBtn}\r\n          {$registBtn}\r\n        </ul>\r\n        \r\n        <form onSubmit={searchDrink} className=\"form-inline my-2 my-lg-0\">\r\n            <input id=\"drinkname\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Find a drink\" aria-label=\"Search\" onChange={event => setDrinkName(event.target.value)} />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n\r\n    )\r\n\r\n}\r\nexport default MainHeader\r\n","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\ViewReview.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\login\\LoginForm.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\mixRemoteFunc.ts",["120"],"import { mixologyClient } from \".\"\r\n\r\n\r\nexport const login = async (username:string, password:string) => {\r\n//   let credentials = {\r\n//         username,\r\n//         password\r\n//     }  \r\n\r\n    try{\r\n\r\n        let res = await mixologyClient.post('/user/login/'+ username + '/' + password) //, credentials)\r\n       // console.log(\"aa: \" + res.data.username);\r\n        if(res.data.username === undefined) alert(\"USERNAME AND PASSWORD IS NOT VALID\")\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e);\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT LOGIN\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const reviewList = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/review/' + drinkId) \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT VIEW\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const drinkInfoByName = async (drinkName:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/drinks/drinkName/' + drinkName) \r\n       // console.log(\"drinkInfo:\" + res.data)\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND DRINK INFORMATION\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const drinkInfoById = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/drinks/find/' + drinkId) \r\n       // console.log(\"drinkInfo:\" + res.data)\r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND DRINK INFORMATION\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const ingredientsList = async (drinkId:any) => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/ingredients/drink/' + drinkId) \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND INGREDIENTS LIST\")\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getIngredients = async () => {\r\n\r\n    try{\r\n        let res = await mixologyClient.get('/ingredients') \r\n        return res.data\r\n    }catch(e){\r\n        console.log(e)\r\n        if(e.response){\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT FIND INGREDIENTS LIST\")\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const drinkInfo = async (drinkName:any) => {\r\n\r\n    try {\r\n        let res = await mixologyClient.get('/drinks/drinkName/' + drinkName)\r\n        console.log(res.data)\r\n        return res.data\r\n    } catch (e) {\r\n        console.log(e)\r\n        if (e.response) {\r\n            throw new Error(e.response.data)\r\n        } else {\r\n            throw new Error(\"CANNOT LOGIN\")\r\n        }\r\n\r\n    }\r\n}","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\Drinks\\Ingredients.tsx",["121"],"import React from 'react';\r\nimport { ingredientsList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Ingredients extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            ingredientsList: []\r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await ingredientsList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ ingredientsList: res });\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } else {\r\n                throw new Error(\"ERROR ON CALLING INGREDIENTS\")\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.ingredientsList.entries()){\r\n            returnList.push(value.name + \", \")\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 {returnList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\review\\Review.tsx",["122"],"import React from 'react';\r\nimport { reviewList } from '../../remote/mixRemote/mixRemoteFunc'\r\n\r\nexport class Review extends React.Component<any, any> {\r\n    \r\n    constructor(props:any){\r\n        super(props);\r\n       //console.log(\"Review_constructor_props_drinkId: \" + props.drinkId)\r\n        this.state = {\r\n            key: 0,\r\n            drinkId: props.drinkId,\r\n            currentReviewList: [],\r\n            listCnt: 0,\r\n            drinkName: \"\" \r\n        }\r\n        \r\n    }\r\n\r\n    async componentWillMount() {\r\n        try{\r\n            let res = await reviewList(this.state.drinkId);\r\n            this.setState({ key: res.id });\r\n            this.setState({ currentReviewList: res });\r\n            this.setState({ drinkName: res[0].drink.name})\r\n            while(this.state.listCnt < res.length){\r\n                console.log(this.state.currentReviewList[this.state.listCnt]);\r\n            this.setState({listCnt:this.state.listCnt+1})\r\n        }\r\n        }catch(e){\r\n            console.log(e)\r\n            if(e.response){\r\n                throw new Error(e.response.data)\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let returnList = []\r\n\r\n        for(const [index, value] of this.state.currentReviewList.entries()){\r\n            returnList.push(<tr><td>{value.id}</td><td>{value.description}</td><td>{value.rate}</td><td>{value.author.username}</td></tr>)\r\n        }\r\n       \r\n        return (\r\n            <div>\r\n                 <h5 >DrinkName: {this.state.drinkName}</h5>\r\n            <table style={{ marginLeft:20}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>REVIEW_ID</th><th>DESCRIPTION</th><th>RATE</th><th>EVALUATOR</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n               {returnList}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkCard.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\ProfileBar\\ProfileBar.tsx",["123","124"],"\r\nimport React, { useState } from 'react';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport axios from 'axios'\r\n\r\n\r\nconst barStyle = {\r\n    backgroundColor: \"salmon\",\r\n    minHeight: \"15vh\"\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    borderRadius: \"50px\",\r\n    border: \"3px lightblue solid\",\r\n    margin: \"0.8rem\"\r\n}\r\n\r\nconst SearchButtonStyling = {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n    padding: \"10px 16px\",\r\n    borderRadius: \"35px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"1.33\",\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"Translate(-50%, -50%)\",\r\n    border: \"1px solid #020202\",\r\n   // \"-webkit-box-shadow\": \"5px 5px 15px 5px #fcfcfc\",\r\n    //\"box-shadow\": \"2.5px 2.5px 15px 2.5px #e7caca\"\r\n}\r\n\r\n\r\nconst ProfileBar = (props:any) =>{\r\n\r\n const [ sliderValue, setSliderValue ] = useState(50); \r\n const [favorites, setFavorites] = useState([]);\r\n\r\n\r\n\r\n  \r\nvar userInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"));\r\nvar   isGuest = true;\r\n\r\n  if(userInfo != null){\r\n      isGuest = false;\r\n  } else{\r\n      isGuest = true;\r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n    const getFavorites = async (e:any)=>{\r\n        e.preventDefault()\r\n        console.log(\"getdrinksbyalcoholcontentSTART\")\r\n        const response = await axios.get(`http://localhost:8080/user/favoriteDrinks/${userInfo.id}`).catch((err)=>{console.log(err)})\r\n        setFavorites([])\r\n        \r\n\r\n        if((response && response.data)){\r\n            // console.log(response.data)\r\n            setFavorites(response.data)\r\n        } \r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div style={barStyle} className=\"col-12\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-4\">\r\n                    <img style={imageStyle} src=\"https://i.pravatar.cc/50\" alt=\"Profile Picture of user\"/>\r\n                    <h5>{!isGuest? (userInfo.firstname + \"  \" + userInfo.lastname) : \"Guest\"} </h5>\r\n                    <p>{!isGuest? (\"username : \" +userInfo.username +\" | id: \" + userInfo.id) : \"\"}</p>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH ALL DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={props.getCall1} style={{height:\"100%\"}}>\r\n                            <button  style={SearchButtonStyling} type=\"submit\" className=\"btn btn-success btn-circle btn-xl\">\r\n                                <i className=\"fa fa-cocktail\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">All Drinks</p>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n                {/* SEARCH FAVORITE DRINKS */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form onSubmit={getFavorites} style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"submit\" className=\"btn btn-danger btn-circle btn-xl\">\r\n                                <i className=\"fa fa-heart\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Favorites</p>\r\n                    </form>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n                {/* SEARCH DRINKS BY ALCOHOL CONTENT */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n\r\n                    <p>Alcohol Content</p>  \r\n                    <form onSubmit={props.getCall3} style={{height:\"100%\"}}>\r\n                        <RangeSlider\r\n                            value={sliderValue}\r\n                            onChange={(changeEvent:any) => {\r\n                                    setSliderValue(changeEvent.target.value)\r\n                                    props.setValueSlider(sliderValue)\r\n                                    \r\n                                }\r\n                            }\r\n                            onAfterChange = {(e:any)=>{\r\n                                setSliderValue(e.target.value)\r\n                                props.setValueSlider(sliderValue)\r\n                                props.getCall3()\r\n                            }}\r\n                            // max = true\r\n                            variant='info'\r\n                            tooltip=\"auto\"\r\n                            tooltipLabel={(e:any) =>{\r\n                                return (`UP TO : ${props.getValueSlider()}% Alcohol`)\r\n                                // return props.valueSlider\r\n                            }}\r\n                        />\r\n                    </form>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n                {/* SEARCH DRINKS BY INGREDIENT */}\r\n                <div style={{}} className=\"col-12 col-sm-2 \">\r\n                    <form style={{height:\"100%\"}}>\r\n                            <button style={SearchButtonStyling} type=\"button\" className=\"btn btn-info btn-circle btn-xl\">\r\n                                <i className=\"fas fa-mortar-pestle\"></i>\r\n                            </button>\r\n                            <p className=\"badge\">Search By Ingridient</p>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n{/* HIDDEN ROW FOR FAV DRINKS */}\r\n            <div className=\"row\">\r\n                <div className=\"container\">\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3 >Favorites</h3>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                            {favorites.map((element)=>{\r\n                                 return(\r\n                                    <div className=\"alert alert-success\" role=\"alert\">\r\n                                        <a className=\"text-dark\" style={{textDecorationColor:\"black\"}} href=\"\">{element.name} • {element.degree}%</a> \r\n                                    </div>\r\n                                )\r\n                            })     \r\n                            }\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileBar\r\n\r\n","C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\components\\MainPageComponents\\DrinksCard\\DrinkName.tsx",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\index.ts",[],"C:\\Users\\young\\Desktop\\Project2-Team7-FrontEnd\\mixology-101\\src\\remote\\mixRemote\\index.ts",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":4,"column":16,"nodeType":"131","messageId":"132","endLine":4,"endColumn":24},{"ruleId":"129","severity":1,"message":"134","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"135","line":24,"column":10,"nodeType":"131","messageId":"132","endLine":24,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":80,"column":21,"nodeType":"138","endLine":80,"endColumn":106},{"ruleId":"129","severity":1,"message":"139","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"140","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"141","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"142","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":58,"column":7,"nodeType":"138","endLine":58,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":58,"column":44,"nodeType":"138","endLine":58,"endColumn":114},{"ruleId":"129","severity":1,"message":"145","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"146","line":37,"column":20,"nodeType":"131","messageId":"132","endLine":37,"endColumn":25},{"ruleId":"129","severity":1,"message":"146","line":42,"column":20,"nodeType":"131","messageId":"132","endLine":42,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":80,"column":21,"nodeType":"138","endLine":80,"endColumn":107},{"ruleId":"143","severity":1,"message":"144","line":173,"column":41,"nodeType":"138","endLine":173,"endColumn":112},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'RegisterComponent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Component' is defined but never used.","'call' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useForm' is defined but never used.","'axios' is defined but never used.","'MainFooter' is defined but never used.","'MainBody' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'index' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]